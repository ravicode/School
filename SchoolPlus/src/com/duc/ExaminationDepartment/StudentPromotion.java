/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StudentPromotion.java
 *
 * Created on Sep 30, 2009, 9:18:57 AM
 */

package com.duc.ExaminationDepartment;
import com.duc.DatabaseConnection.DatabaseConnection;
import java.sql.*;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.table.TableColumn;
import javax.swing.DefaultCellEditor;
import static com.duc.DatabaseConnection.DatabaseConnection.*;

/**
 *
 * @author Ravi Dangaich
 */
public class StudentPromotion extends javax.swing.JInternalFrame
{
      //Connection con=DatabaseConnection.con;
    //  MapForIndex mp= new MapForIndex();
      HashMap classmap1= mp.getClassIndexFromName();
      ArrayList<Integer> classes=new ArrayList<Integer>();
      HashMap sectiomap1=mp.getSectionIndexFromName();
      DefaultTableModel dm,dm1;
      //String currentSection="";
    /** Creates new form StudentPromotion */
    public StudentPromotion()
    {
        initComponents();
        addClass();
        dm = (DefaultTableModel)jTable1.getModel();
        dm.setRowCount(0);
        dm1=(DefaultTableModel)jTable2.getModel();
        dm1.setRowCount(0);
    }

    public void addClass()
{
        try
        {
        ps = con.prepareStatement("select classtitle,classid from classsetup order by classid");
        rs = ps.executeQuery();
        while (rs.next())
        {
        cmbClass.addItem(rs.getString(1));
        cmbNextClass.addItem(rs.getString(1));
        classes.add(rs.getInt(2));
        }
       }
        catch(Exception e)
        {
          System.err.println("Error "+e);
        }
}


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        cmbClass = new javax.swing.JComboBox();
        cmbSection = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        checkEx = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cmbNextSection = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        cmbNextClass = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Promote Students");

        jPanel1.setBackground(new java.awt.Color(51, 204, 255));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cmbClass.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));
        cmbClass.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbClassItemStateChanged(evt);
            }
        });
        cmbClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClassActionPerformed(evt);
            }
        });

        cmbSection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));
        cmbSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSectionActionPerformed(evt);
            }
        });

        jLabel1.setText("Class");

        jLabel2.setText("Section");

        checkEx.setText("Make Ex-Students");
        checkEx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkExActionPerformed(evt);
            }
        });

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("Current Class");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmbClass, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbSection, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(checkEx)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(119, 119, 119))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkEx)
                            .addComponent(jButton2))
                        .addGap(30, 30, 30))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(cmbSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(34, 34, 34)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, new Boolean(true)},
                {null, null, null, null, new Boolean(true)},
                {null, null, null, null, new Boolean(true)},
                {null, null, null, null, new Boolean(true)}
            },
            new String [] {
                "Adm. No.", "Name", "Old Roll No.", "New Roll No.", "Promote/Make Ex-Stu."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTextPane1.setBackground(new java.awt.Color(204, 204, 204));
        jTextPane1.setEditable(false);
        jTextPane1.setFont(new java.awt.Font("Tahoma", 1, 18));
        jTextPane1.setText("                                                               Student Promotion");
        jScrollPane2.setViewportView(jTextPane1);

        jTextPane2.setBackground(new java.awt.Color(204, 204, 204));
        jTextPane2.setEditable(false);
        jTextPane2.setFont(new java.awt.Font("Tahoma", 0, 12));
        jTextPane2.setForeground(new java.awt.Color(255, 0, 0));
        jTextPane2.setText("Promote the Upper window class to lower window class and select from the students list, it is strognly advised to take a backup firstly.");
        jScrollPane3.setViewportView(jTextPane2);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel4.setForeground(new java.awt.Color(0, 0, 204));
        jLabel4.setText("Start doing promotion from the most higher class to most lower class, make most higher class students as Ex-Students firrstly.");

        jButton3.setText("Promote to the Next Class/Make Ex Student");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setText("Section");

        cmbNextSection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));
        cmbNextSection.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbNextSectionItemStateChanged(evt);
            }
        });
        cmbNextSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNextSectionActionPerformed(evt);
            }
        });

        jLabel3.setText("Class");

        cmbNextClass.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));
        cmbNextClass.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbNextClassItemStateChanged(evt);
            }
        });
        cmbNextClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNextClassActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel11.setForeground(new java.awt.Color(255, 0, 51));
        jLabel11.setText("Next Class");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmbNextClass, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmbNextSection, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(404, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbNextSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cmbNextClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("List of students to be promoted");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, new Integer(0)},
                {null, null, null, new Integer(0)},
                {null, null, null, new Integer(0)},
                {null, null, null, null}
            },
            new String [] {
                "Adm. No.", "Name", "Old Roll No.", "New Roll No."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable2);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("Existing Students in next class & sec.");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel8.setForeground(new java.awt.Color(0, 0, 204));
        jLabel8.setText("Assign New Roll No.s");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel9.setForeground(new java.awt.Color(0, 0, 204));
        jLabel9.setText("Assign New Roll No.s");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 879, Short.MAX_VALUE)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 879, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 848, Short.MAX_VALUE)
                .addGap(21, 21, 21))
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 879, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(561, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, 0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbClassItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbClassItemStateChanged
        // TODO add your handling code here:
        try
      {
        ps = con.prepareStatement("SELECT `sectionsetuplist`.`sectiontitle` from `sectionsetuplist`,`sectionsetup` where sectionid=`sectionsetup`.`sectiontitle` and classtitle=?");
        ps.setInt(1, Integer.parseInt(String.valueOf(classmap1.get(cmbClass.getSelectedItem().toString()))));
        rs = ps.executeQuery();
        cmbSection.removeAllItems();
        cmbSection.addItem("Select");
        while (rs.next())
         {
          cmbSection.addItem(rs.getString(1));
         }
       }
        catch(Exception e)
        {
          System.err.println("Error "+e);
        }
    }//GEN-LAST:event_cmbClassItemStateChanged

    private void cmbNextClassItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbNextClassItemStateChanged
        // TODO add your handling code here:
           try
      {
        ps = con.prepareStatement("SELECT `sectionsetuplist`.`sectiontitle` from `sectionsetuplist`,`sectionsetup` where sectionid=`sectionsetup`.`sectiontitle` and classtitle=?");
        ps.setInt(1, Integer.parseInt(String.valueOf(classmap1.get(cmbNextClass.getSelectedItem().toString()))));
        rs = ps.executeQuery();
        cmbNextSection.removeAllItems();
        cmbNextSection.addItem("Select");
        while (rs.next())
         {
          cmbNextSection.addItem(rs.getString(1));
         }        
       }
        catch(Exception e)
        {
          System.err.println("Error "+e);
        }
    }//GEN-LAST:event_cmbNextClassItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        super.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:      
        process();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cmbNextSectionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbNextSectionItemStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbNextSectionItemStateChanged

    private void cmbNextSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNextSectionActionPerformed
        // TODO add your handling code here:
        if(cmbNextSection.getSelectedIndex()<=0 || cmbNextClass.getSelectedIndex()<=0)
        return;
       loadOldStudents();
    }//GEN-LAST:event_cmbNextSectionActionPerformed

    private void cmbNextClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNextClassActionPerformed
        // TODO add your handling code here:
        if(cmbNextClass.getSelectedIndex()<=0 || cmbNextSection.getSelectedIndex()<=0)
        return;
       loadOldStudents();
    }//GEN-LAST:event_cmbNextClassActionPerformed

    private void cmbClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClassActionPerformed
        // TODO add your handling code here:
         if(cmbClass.getSelectedIndex()<=0 || cmbSection.getSelectedIndex()<=0)
        {
        dm.setRowCount(0);
        dm1.setRowCount(0);
        return;
        }
        loadStudents();
    }//GEN-LAST:event_cmbClassActionPerformed

    private void cmbSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSectionActionPerformed
        // TODO add your handling code here:
         if(cmbClass.getSelectedIndex()<=0 || cmbSection.getSelectedIndex()<=0)
        {
        dm.setRowCount(0);
        dm1.setRowCount(0);
        return;
        }
        loadStudents();
    }//GEN-LAST:event_cmbSectionActionPerformed

    private void checkExActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkExActionPerformed
        // TODO add your handling code here:
        if(checkEx.isSelected())
        dm1.setRowCount(0);
        else if(cmbNextClass.getSelectedIndex()>=0 && cmbNextSection.getSelectedIndex()>=0)
        loadOldStudents();
        
    }//GEN-LAST:event_checkExActionPerformed

    public void loadOldStudents()
    {
         JComboBox rollNumber = new JComboBox();
         for(int i=1;i<=60;i++)
     {
       rollNumber.addItem(i);
     }
      rollNumber.setSelectedIndex(1);
        try
       {
          ps=con.prepareStatement("select id,name,roll from studententry where status=1 and class=? and section=? order by roll");
          ps.setInt(1, Integer.parseInt(classmap1.get(cmbNextClass.getSelectedItem().toString()).toString()));
          ps.setInt(2, Integer.parseInt(sectiomap1.get(cmbNextSection.getSelectedItem().toString()).toString()));

          rs=ps.executeQuery();
          if(!rs.next())
          {
            //JOptionPane.showMessageDialog(null, "No Student found in this class ", "Message", JOptionPane.PLAIN_MESSAGE);
            dm1.setRowCount(0);
            return;
          }
          rs.previous();
          int i=0;

          while(rs.next())
          i++;

          dm1.setRowCount(i);
          i=0;

          rs.first();
          rs.previous();

          while(rs.next())
          {
           dm1.setValueAt(rs.getString(1), i, 0);
           dm1.setValueAt(rs.getString(2), i, 1);
           dm1.setValueAt(rs.getInt(3), i, 2);
           i++;
          }

          TableColumn roll = jTable2.getColumnModel().getColumn(3);
          roll.setCellEditor(new DefaultCellEditor(rollNumber));

       }
       catch(Exception e)
       {
       e.printStackTrace();
       }
    }

    public void loadStudents()
    {
        JComboBox rollNumber = new JComboBox();
         for(int i=1;i<=60;i++)
     {
       rollNumber.addItem(i);
     }
      rollNumber.setSelectedIndex(1);
       try
       {
          ps=con.prepareStatement("select id,name,roll from studententry where status=1 and class=? and section=? order by roll");
          ps.setInt(1, Integer.parseInt(classmap1.get(cmbClass.getSelectedItem().toString()).toString()));
          ps.setInt(2, Integer.parseInt(sectiomap1.get(cmbSection.getSelectedItem().toString()).toString()));

          rs=ps.executeQuery();
          if(!rs.next())
          {
            JOptionPane.showMessageDialog(null, "No Student found in this class ", "Message", JOptionPane.PLAIN_MESSAGE);
            dm.setRowCount(0);
            return;
          }
          rs.previous();
          int i=0;
          
          while(rs.next())
          i++;
          
          dm.setRowCount(i);
          i=0;

          rs.first();
          rs.previous();

          while(rs.next())
          {
           dm.setValueAt(rs.getString(1), i, 0);
           dm.setValueAt(rs.getString(2), i, 1);
           dm.setValueAt(rs.getInt(3), i, 2);
           dm.setValueAt(true, i, 4);
           i++;
          }
          TableColumn roll = jTable1.getColumnModel().getColumn(3);
          roll.setCellEditor(new DefaultCellEditor(rollNumber));
       }
       catch(Exception e)
       {
       e.printStackTrace();
       }
    }
    
    public void process()
    {
        if(cmbClass.getSelectedIndex()<=0 || cmbSection.getSelectedIndex()<=0)
        {
            JOptionPane.showMessageDialog(null, "Select class and section ", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

     if(!checkEx.isSelected())
     {
      if( cmbNextClass.getSelectedIndex()<=0 || cmbNextSection.getSelectedIndex()<=0 )
        {
        JOptionPane.showMessageDialog(null, "Select class and section ", "Error", JOptionPane.ERROR_MESSAGE);
        return;
        }

         String cclass=cmbClass.getSelectedItem().toString();
         String nclass=cmbNextClass.getSelectedItem().toString();
         int ccindex=Integer.parseInt(classmap1.get(cclass).toString());
         int ncindex=Integer.parseInt(classmap1.get(nclass).toString());

         if(ccindex==ncindex)
         {
         JOptionPane.showMessageDialog(null, "Both classes can not be same", "Error", JOptionPane.ERROR_MESSAGE);
         return;
         }

         if(ccindex>ncindex)
         {
           int option1=JOptionPane.showConfirmDialog(null, "You are going to transfer from upper to lower class.Do you want to comtinue ?", "Warning", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
           if(option1!=0)
           {
            System.out.println("returning");
            return;
           }
         }

         if(!cmbSection.getSelectedItem().toString().equals(cmbNextSection.getSelectedItem().toString()))
         {
           int option2=JOptionPane.showConfirmDialog(null, "Section is changed in next class from the current class.Do you wish to continue?", "Warning", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
           if(option2!=0)
           {
            System.out.println("returning");
            return;
           }
         }

           int option4=JOptionPane.showConfirmDialog(null, "Make sure you have assigned new roll numbers to all students in cureent and next class, Do you wish to continue?", "Warning", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
           if(option4!=0)
           {
            System.out.println("returning");
            return;
           }

         promoteStudents();
       }

     else
     {
           int option3=JOptionPane.showConfirmDialog(null, "Do you really want to make these students as Ex-Students ?", "Warning", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
           if(option3!=0)
           {
            System.out.println("returning");
            return;
           }
           makeExStudents();
     }

    }

    public void promoteStudents()
    {
        int roll=0;
        try
        {
            for(int i=0;i<dm.getRowCount();i++)
            {
              roll=0;
              if(Boolean.parseBoolean(dm.getValueAt(i, 4).toString()))
              {
               try
               {
                 roll=Integer.parseInt(dm.getValueAt(i, 3).toString()) ;
               }
               catch(Exception e)
               {
                   roll=Integer.parseInt(dm.getValueAt(i, 2).toString()) ;
               }
               ps=con.prepareStatement("update studententry set class=?,section=?,roll=? where id=?");
               ps.setInt(1, Integer.parseInt(classmap1.get(cmbNextClass.getSelectedItem().toString()).toString()));
               ps.setInt(2, Integer.parseInt(sectiomap1.get(cmbNextSection.getSelectedItem().toString()).toString()));
               ps.setInt(3, roll);
               ps.setString(4, dm.getValueAt(i, 0).toString());
               ps.executeUpdate();
               System.out.println(ps);
              }
            }

            for(int j=0;j<dm1.getRowCount();j++)
            {
                roll=0;
                try
               {
                 roll=Integer.parseInt(dm1.getValueAt(j, 3).toString()) ;
               }
               catch(Exception e)
               {
                roll=Integer.parseInt(dm1.getValueAt(j, 2).toString()) ;
               }
               ps=con.prepareStatement("update studententry set roll=? where id=?");              
               ps.setInt(1, roll);
               ps.setString(2, dm1.getValueAt(j, 0).toString());
               ps.executeUpdate();
               System.out.println(ps);
            }
            JOptionPane.showMessageDialog(null, "Promoted successfully", "message", JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }

 public void makeExStudents()
  {
     
     try
     {
        for(int i=0;i<dm.getRowCount();i++)
        {
          if(Boolean.parseBoolean(dm.getValueAt(i, 4).toString()))
          {
            System.out.println("Yes...............");
            ps=con.prepareStatement("update studententry set status=0 where id=?");
            ps.setString(1, dm.getValueAt(i, 0).toString());
            ps.executeUpdate();
          }
        }
        JOptionPane.showMessageDialog(null,"Selected students' status changed as ex-students","Message", JOptionPane.INFORMATION_MESSAGE);
      }
      catch(Exception e)
      {
        e.printStackTrace();
      }
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkEx;
    private javax.swing.JComboBox cmbClass;
    private javax.swing.JComboBox cmbNextClass;
    private javax.swing.JComboBox cmbNextSection;
    private javax.swing.JComboBox cmbSection;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    // End of variables declaration//GEN-END:variables
public  PreparedStatement ps;
public  ResultSet rs;
}
