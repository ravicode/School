/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NoticeToStudents.java
 *
 * Created on Aug 14, 2010, 2:11:51 AM
 */

package com.duc.Reception;

//import com.duc.ImportSection.MapForIndex;
import java.awt.event.KeyEvent;
//import javax.swing.table.DefaultTableModel;
import java.sql.*;

import javax.swing.JOptionPane;
import java.util.HashMap;
import javax.swing.JOptionPane;
import net.sf.jasperreports.view.JasperViewer;
import net.sf.jasperreports.engine.*;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import static com.duc.DatabaseConnection.DatabaseConnection.*;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import java.util.Vector;

/**
 *
 * @author Sourabh
 */
public class CertificatesToStudents extends javax.swing.JInternalFrame {

 HashMap classmap=mp.getClassIndexName();
 HashMap classmap1=mp.getClassIndexFromName();
 HashMap sectionmap=mp.getSectionIndexName();
 HashMap sectionmap1=mp.getSectionIndexFromName();
 
    /** Creates new form NoticeToStudents */
    public CertificatesToStudents() {
        initComponents();

        fromClass();
        fromSection();
        classLabel.setVisible(false);
        cmbClass.setVisible(false);
        secLabel.setVisible(false);
        cmbSection.setVisible(false);

    }

    public void fromClass()
    {
         try
    {

 //con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();


         ps = con.prepareStatement("select * from classsetup");

             rs = ps.executeQuery();


            while (rs.next())
            {
        cmbClass.addItem(rs.getString(1));
            }
    }
    catch(Exception e)
    {
        System.err.println("Error is"+e);
    }
    }

      public void fromSection()
    {
        try
    {

 // con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();


         ps = con.prepareStatement("select  sectiontitle from sectionsetuplist");

             rs = ps.executeQuery();


            while (rs.next())
            {
        cmbSection.addItem(rs.getString(1));
            }
    }
    catch(Exception e)
    {
        System.err.println("Error is"+e);
    }
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        certiCobmo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        checkStudent = new javax.swing.JRadioButton();
        checkClass = new javax.swing.JRadioButton();
        labelAdmission = new javax.swing.JLabel();
        classLabel = new javax.swing.JLabel();
        txtAdmission = new javax.swing.JTextField();
        cmbClass = new javax.swing.JComboBox();
        secLabel = new javax.swing.JLabel();
        cmbSection = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Issue Certificates");

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jTextPane1.setBackground(new java.awt.Color(204, 204, 204));
        jTextPane1.setEditable(false);
        jTextPane1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextPane1.setText("                                                                    Issue Certificates to Students");
        jTextPane1.setAutoscrolls(false);
        jScrollPane1.setViewportView(jTextPane1);

        jLabel1.setText("Select Certificate");

        certiCobmo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "School Leaving Certificate", "Bonafide Certificate", "No Objection Certificate", "Character Certificate", "No-Dues Certificate" }));

        jLabel2.setText("Certificate For");

        buttonGroup1.add(checkStudent);
        checkStudent.setSelected(true);
        checkStudent.setText("Student");
        checkStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkStudentActionPerformed(evt);
            }
        });

        buttonGroup1.add(checkClass);
        checkClass.setText("Class");
        checkClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkClassActionPerformed(evt);
            }
        });

        labelAdmission.setText("Admission No.");

        classLabel.setText("Class");

        cmbClass.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose" }));

        secLabel.setText("Section");

        cmbSection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose" }));

        jButton1.setText("Preview & Print Certificate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 874, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(labelAdmission, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(checkStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(checkClass, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtAdmission, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(certiCobmo, javax.swing.GroupLayout.Alignment.LEADING, 0, 177, Short.MAX_VALUE))
                                .addGap(32, 32, 32)
                                .addComponent(classLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbClass, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(secLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbSection, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(150, 150, 150))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(certiCobmo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(checkStudent)
                    .addComponent(checkClass))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAdmission, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAdmission)
                    .addComponent(cmbClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secLabel)
                    .addComponent(cmbSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(classLabel))
                .addGap(57, 57, 57)
                .addComponent(jButton1)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkStudentActionPerformed
        // TODO add your handling code here:
        if(checkStudent.isSelected())
        {
              txtAdmission.setText("");
              txtAdmission.setVisible(true);
              labelAdmission.setVisible(true);

              cmbClass.setVisible(false);
              classLabel.setVisible(false);

              cmbSection.setVisible(false);
              secLabel.setVisible(false);
        }
    }//GEN-LAST:event_checkStudentActionPerformed

    private void checkClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkClassActionPerformed
        // TODO add your handling code here:
        if(checkClass.isSelected())
        {
              txtAdmission.setText("");

              txtAdmission.setVisible(false);
              labelAdmission.setVisible(false);

              cmbClass.setVisible(true);
              classLabel.setVisible(true);

             cmbSection.setVisible(true);
             secLabel.setVisible(true);
        }
    }//GEN-LAST:event_checkClassActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(checkStudent.isSelected())
        {
            String tmp_adm=txtAdmission.getText();
            if(tmp_adm.equals(""))
            {
             JOptionPane.showMessageDialog(null, "Enter Admission Number First", "Error", JOptionPane.ERROR_MESSAGE);
             return;
            }
            else
           printStudentCertificate(tmp_adm);
        }

        else if(checkClass.isSelected())
        {
            if(cmbClass.getSelectedIndex()>0 && cmbSection.getSelectedIndex()>0)
            {
              printBulkCertificates();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

public void printBulkCertificates()
{
     System.out.println("printing bulk Certificates");

       String id="";
       String fathername="";
       String dob="";
       String name="";
       String class1="";
       String doa="";

       Vector collection=new Vector();

       try
       {
        // con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
         HashMap map = new HashMap();

          ps=con.prepareStatement("select institutename, instituteaddress, chiefmobile from instituteregistration" );
          rs = ps.executeQuery();
          rs.next();
          map.put("schoolname",rs.getString(1));
          map.put("schooladdress",rs.getString(2)+ ", Ph. No. - "+rs.getString(3));

           BufferedImage bimg = null;
           bimg = ImageIO.read(new File("images/logo.jpg"));
           map.put("logo",bimg);
           map.put("ref","SL0001");

           ps=con.prepareStatement("select id,name,fathername,date_format(dob,'%d %M , %Y') as dob,class,section,date_format(doa,'%d %M, %Y') as doa from studententry where class=? and section=?");
            ps.setInt(1,Integer.parseInt(classmap1.get(cmbClass.getSelectedItem()).toString()));
            ps.setInt(2,Integer.parseInt(sectionmap1.get(cmbSection.getSelectedItem()).toString()));
           rs=ps.executeQuery();

         while(rs.next())
         {
          bimg=null;
          dob=null;

          id=rs.getString(1);
          name=rs.getString(2);
          fathername=rs.getString(3);
          class1=rs.getString(5);
          dob=rs.getString(4);
          doa=rs.getString(6);
        
         //System.out.println("Adding student "+ i +" Admission number "+id);
         collection.add(new StudentCertificate(name,fathername,dob,doa,class1,id));
         }
                JRBeanCollectionDataSource src = new JRBeanCollectionDataSource(collection);
                JasperReport js = JasperCompileManager.compileReport("reports/extra/slc1.jrxml");
                JasperPrint pr = JasperFillManager.fillReport(js,map,src);
                JasperViewer jv = new JasperViewer(pr, false);
                jv.setTitle("Students' Certificate Print ");
                jv.setVisible(true);
              //  con.close();
         }
       catch(Exception e)
       {
          System.err.println("Error is "+ e);
       }

}
    public void printStudentCertificate(String tmp_adm)
    {
             try
            {
           //  con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
             HashMap map = new HashMap();

             map.put("ref","SLC001");
            
          ps=con.prepareStatement("select institutename, instituteaddress from instituteregistration" );
          rs = ps.executeQuery();
          rs.next();
          map.put("schoolname",rs.getString(1));
          map.put("schooladdress",rs.getString(2));

           BufferedImage bimg = null;
           bimg = ImageIO.read(new File("images/logo.jpg"));
           map.put("logo",bimg);

           ps=con.prepareStatement("select id,name,fathername,date_format(dob,'%d %M , %Y') as dob,class as class1,section,date_format(doa,'%d %M, %Y') as doa from studententry where id=?");
           ps.setString(1, tmp_adm);
           rs=ps.executeQuery();

                JRResultSetDataSource src= new JRResultSetDataSource(rs);
                JasperReport js = JasperCompileManager.compileReport("reports/extra/slc.jrxml");
                JasperPrint pr = JasperFillManager.fillReport(js,map,src);
                JasperViewer jv = new JasperViewer(pr, false);
                jv.setTitle("Letter Head Print");
                jv.setVisible(true);
               // con.close();

         }
         catch(Exception e)
         {
           System.out.println("Error is ...."+e);
         }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox certiCobmo;
    private javax.swing.JRadioButton checkClass;
    private javax.swing.JRadioButton checkStudent;
    private javax.swing.JLabel classLabel;
    private javax.swing.JComboBox cmbClass;
    private javax.swing.JComboBox cmbSection;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JLabel labelAdmission;
    private javax.swing.JLabel secLabel;
    private javax.swing.JTextField txtAdmission;
    // End of variables declaration//GEN-END:variables
    ResultSet rs;
     PreparedStatement ps;
}
