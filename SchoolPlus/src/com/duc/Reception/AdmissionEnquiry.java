/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AdmissionEnquiryGUI1.java
 *
 * Created on Sep 18, 2009, 6:09:23 PM
 */

package com.duc.Reception;
import com.duc.ImportSection.MapForIndex;
//import it.businesslogic.ireport.chart.ChartFactory;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.table.DefaultTableModel;

import java.util.Vector;
import java.util.HashMap;
import javax.swing.JOptionPane;
import net.sf.jasperreports.view.JasperViewer;
import net.sf.jasperreports.engine.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.net.InetAddress;
import java.text.MessageFormat;

import javax.imageio.ImageIO;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JTable.PrintMode;
import javax.swing.table.TableColumn;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;

import static com.duc.DatabaseConnection.DatabaseConnection.*;

//import com.duc.ImportSection.*;

/**
 *
 * @author Ravi Dangaich
 */
public class AdmissionEnquiry extends javax.swing.JInternalFrame {
DefaultTableModel dm;
//DateFormat df;
// MapForIndex mp=new MapForIndex();
         HashMap classmap1=mp.getClassIndexFromName();
         HashMap classmap=mp.getClassIndexName();
         HashMap sessionmap1=mp.getSessionIndexFromName();
          HashMap sessionmap=mp.getSessionIndexToName();
           JComboBox classCombo = new JComboBox();
           JComboBox transportCombo = new JComboBox();
    /** Creates new form AdmissionEnquiryGUI1 */
    public AdmissionEnquiry() {
        initComponents();
        pack();
       // this.setLocationRelativeTo(null);
        dm = (DefaultTableModel) jTable1.getModel();
        dm.setRowCount(1);
      //  df=new SimpleDateFormat("yyyy-MM-dd");
         dateofenquiry.setDateFormat(df);
          dateofenquiry1.setDateFormat(df);
         fromClass();
         fromSession();
           allAdmissionEnquiry();
           fromTransportStop();

        /*   JComboBox periods = new JComboBox();

     for(int i=0; i<=Integer.parseInt(classCombo.getSelectedItem().toString()); i++)
     {
       System.out.println(i);
       periods.addItem(i);
     }*/


                  TableColumn absent = jTable1.getColumnModel().getColumn(3);            // table name is AttendanceTable
       absent.setCellEditor(new DefaultCellEditor(classCombo));
       TableColumn absent1 = jTable1.getColumnModel().getColumn(4);
 absent1.setCellEditor(new DefaultCellEditor(transportCombo));
           
    }
public void fromSession()
    {
         try
       {
           ps = con.prepareStatement("select sessiontitle,sessionid,status from sessionsetup ");

           rs = ps.executeQuery();
           // int i = 0,j=0;
          while(rs.next())
            {
                //j++;
              sessionCombo.addItem(rs.getString(1));

              if(rs.getInt(3)==1)
                  sessionValue=rs.getInt(2);

            }



         }
         catch(Exception e)
         {
             e.printStackTrace();
    }



    }
    public void fromClass()
    {
         try
    {

// con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();


         ps = con.prepareStatement("select * from classsetup");

             rs = ps.executeQuery();


            while (rs.next())
            {
        classCombo.addItem(rs.getString(1));


            }

 // con.close();
         }
    catch(Exception e)
    {
        System.err.println("Error is"+e);
    }

    }
   
 public void fromTransportStop()
    {
         try
    {

// con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();


         ps = con.prepareStatement("select * from transportroutestopsetup");

             rs = ps.executeQuery();


            while (rs.next())
            {
        transportCombo.addItem(rs.getString(2));


            }

 // con.close();
         }
    catch(Exception e)
    {
        System.err.println("Error is"+e);
    }

    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton7 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        printButton = new javax.swing.JButton();
        showAllButton = new javax.swing.JButton();
        studentname = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        feeStructureButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        dateofenquiry = new datechooser.beans.DateChooserCombo();
        jLabel6 = new javax.swing.JLabel();
        newEnquiryButton = new javax.swing.JButton();
        searchByDate = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        dateofenquiry1 = new datechooser.beans.DateChooserCombo();
        jLabel3 = new javax.swing.JLabel();
        sessionCombo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        printButton2 = new javax.swing.JButton();

        jButton7.setText("Search");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        setBackground(new java.awt.Color(0, 153, 153));
        setClosable(true);
        setIconifiable(true);
        setTitle("Admission Enquiry Register Form");

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "S. No.", "Student", "Guardian", "Class", "Area", "Ph. No.", "Remarks", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTextPane1.setBackground(new java.awt.Color(204, 204, 255));
        jTextPane1.setEditable(false);
        jTextPane1.setFont(new java.awt.Font("Tahoma", 0, 24));
        jTextPane1.setText("                                Admission Enquiry Register");
        jScrollPane2.setViewportView(jTextPane1);

        jTextPane2.setBackground(new java.awt.Color(204, 204, 255));
        jTextPane2.setEditable(false);
        jTextPane2.setFont(new java.awt.Font("Tahoma", 0, 12));
        jTextPane2.setText("It will help you to manage all the queries regarding to admissions in your institute...");
        jScrollPane3.setViewportView(jTextPane2);

        printButton.setFont(new java.awt.Font("Tahoma", 1, 12));
        printButton.setForeground(new java.awt.Color(0, 0, 255));
        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        showAllButton.setFont(new java.awt.Font("Tahoma", 1, 12));
        showAllButton.setForeground(new java.awt.Color(0, 0, 255));
        showAllButton.setText("Show All");
        showAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllButtonActionPerformed(evt);
            }
        });

        studentname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                studentnameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                studentnameKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("Student's Name");

        feeStructureButton.setFont(new java.awt.Font("Tahoma", 1, 12));
        feeStructureButton.setForeground(new java.awt.Color(0, 0, 255));
        feeStructureButton.setText("Fee Structure");
        feeStructureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feeStructureButtonActionPerformed(evt);
            }
        });

        saveButton.setFont(new java.awt.Font("Tahoma", 1, 12));
        saveButton.setForeground(new java.awt.Color(0, 0, 255));
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel6.setForeground(new java.awt.Color(153, 0, 51));
        jLabel6.setText(" From");

        newEnquiryButton.setFont(new java.awt.Font("Tahoma", 1, 12));
        newEnquiryButton.setForeground(new java.awt.Color(0, 0, 255));
        newEnquiryButton.setText("New Enquiry");
        newEnquiryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEnquiryButtonActionPerformed(evt);
            }
        });

        searchByDate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        searchByDate.setForeground(new java.awt.Color(0, 0, 255));
        searchByDate.setText("Search ");
        searchByDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByDateActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel7.setForeground(new java.awt.Color(153, 0, 51));
        jLabel7.setText("To");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel3.setText("Session");

        sessionCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose" }));
        sessionCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sessionComboActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel4.setForeground(new java.awt.Color(255, 102, 102));

        printButton2.setFont(new java.awt.Font("Tahoma", 1, 12));
        printButton2.setForeground(new java.awt.Color(204, 102, 0));
        printButton2.setText("SMS");
        printButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(printButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                    .addComponent(printButton, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                    .addComponent(feeStructureButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(showAllButton, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                    .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                    .addComponent(newEnquiryButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                .addGap(22, 22, 22))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 898, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(21, 21, 21)
                .addComponent(studentname, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sessionCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateofenquiry, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateofenquiry1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchByDate, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 898, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(studentname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(sessionCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6)
                    .addComponent(dateofenquiry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(dateofenquiry1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchByDate))
                .addGap(7, 7, 7)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(newEnquiryButton)
                        .addGap(4, 4, 4)
                        .addComponent(saveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showAllButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(feeStructureButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(printButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(printButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        try
        {
        String s="Admission Enquiry Record";
        MessageFormat header=new MessageFormat(s);
        jTable1.print(PrintMode.FIT_WIDTH, header, null);
        }

        catch(Exception e)
        {
         System.err.println("Error in printing student search");
        }
}//GEN-LAST:event_printButtonActionPerformed
    

        private void showAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllButtonActionPerformed
            allAdmissionEnquiry();     //   showAllDefaultersList();        // TODO add your handling code here:
}//GEN-LAST:event_showAllButtonActionPerformed

        private void studentnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_studentnameKeyPressed
            //  if(!studentname.getText().isEmpty())viewDefaultersList();     // TODO add your handling code here:
}//GEN-LAST:event_studentnameKeyPressed

        private void studentnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_studentnameKeyTyped
            int keycode=evt.getID();
            int id;
            if(keycode==KeyEvent.KEY_TYPED) {

                studentDetailOnBasisOfName();
                // id=Integer.parseInt(jTextField1.getText());
                // loadAdmissionNoTable(id);

            }
}//GEN-LAST:event_studentnameKeyTyped

        private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
            saveEnquiry();        // TODO add your handling code here:
}//GEN-LAST:event_saveButtonActionPerformed

        private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
            //viewEnquiryByDate();    // TODO add your handling code here:
}//GEN-LAST:event_jButton7ActionPerformed

        private void newEnquiryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEnquiryButtonActionPerformed
            reset();    // TODO add your handling code here:
}//GEN-LAST:event_newEnquiryButtonActionPerformed

        private void searchByDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByDateActionPerformed
            viewEnquiryByDate();
}//GEN-LAST:event_searchByDateActionPerformed

        private void feeStructureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feeStructureButtonActionPerformed
            // TODO add your handling code here:
            String cls=classCombo.getSelectedItem().toString();
            printFeeStructure(Integer.parseInt(String.valueOf(classmap1.get(cls))));
            jLabel4.setText("Fee Structure For Selected Class");
        }//GEN-LAST:event_feeStructureButtonActionPerformed

        private void sessionComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sessionComboActionPerformed
            sessionWiseEnquiry();
}//GEN-LAST:event_sessionComboActionPerformed

        private void printButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButton2ActionPerformed
            // TODO add your handling code here:
           // smsAdmissionEnquiry();
             try
 {
        ps=con.prepareStatement("select access from smsaccess where module=? ");
    ps.setString(1,"Admission Enquiry");
    rs=ps.executeQuery();
    if(rs.next())
    {
    if(rs.getInt(1)==1)
        smsAdmissionEnquiry();
      else JOptionPane.showConfirmDialog(null,"Add SMS package access from Accessories","Contact Administrator",JOptionPane.OK_OPTION);
       // jCheckBox1.setSelected(false);

    }else JOptionPane.showConfirmDialog(null,"Add SMS package access from Accessories","Contact Administrator",JOptionPane.OK_OPTION);
      }catch(Exception e)
{
    e.printStackTrace();
}
        }//GEN-LAST:event_printButton2ActionPerformed

        
public void sessionWiseEnquiry()
{
     try
     {
       ps=con.prepareStatement("select * from admissionenquiry where session=? order by serial") ;
ps.setInt(1, Integer.parseInt(sessionmap1.get(sessionCombo.getSelectedItem()).toString()));
       rs=ps.executeQuery();
      populateTable(rs);

 // con.close();
     }catch(Exception e)
   {
e.printStackTrace();
   }
}


public void smsAdmissionEnquiry()
{
     int crow=jTable1.getSelectedRow();

      String id;
    String msg="Thanks For your Admission Enquiry";
    System.out.println("message"+msg);

    //if(jCheckBox1.isSelected())
     //   id=jTextField2.getText().trim();
    //else
        System.out.println("ravi"+dm.getValueAt(crow,5));
    String newmsg=msg.replace(" ","%20");
    System.out.println("New message"+newmsg);
    try
    {
 /*  if(dm.getValueAt(crow,9).equals("null"))
      {
          JOptionPane.showConfirmDialog(null,"Mobile no. Field is empty","Mobile Empty",JOptionPane.OK_OPTION);
      }
      else
      {*/
         id=dm.getValueAt(crow,5).toString().trim();
       //   System.out.println("number"+id);
          if(dm.getValueAt(crow,5).toString().equals(""))
          {
          JOptionPane.showConfirmDialog(null,"Mobile no. is Empty","Mobile No. Empty",JOptionPane.OK_OPTION);
      }
     // else*/
          InetAddress thisIp =InetAddress.getLocalHost();
            String ip=thisIp.getHostAddress();
      new com.duc.Accessories.SendSms().SmsCommon("0000",id,newmsg,ip);
     // }
    }
    catch(Exception e)
    {
        JOptionPane.showConfirmDialog(null,"Mobile no. Field is empty","Mobile Empty",JOptionPane.OK_OPTION);

        e.printStackTrace();
    }
}

                    public void printFeeStructure(int cls)
        {
               String head="";
               int group=0;
               Double amount=0.0;
               Vector collection=new Vector();

            try
            {
             //con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
             HashMap map = new HashMap();
             map.put("class",classCombo.getSelectedItem().toString());

          ps=con.prepareStatement("select institutename, instituteaddress from instituteregistration" );
          rs = ps.executeQuery();
          rs.next();
          map.put("schoolname",rs.getString(1));
          map.put("schooladdress",rs.getString(2));

           BufferedImage bimg = null;
           bimg = ImageIO.read(new File("images/logo.jpg"));
           map.put("logo",bimg);

           ps=con.prepareStatement("select head,amount from admissionfeeamounthead where class=?");
           ps.setInt(1, cls);
           rs=ps.executeQuery();
           while(rs.next())
           {
            head=mp.getFeeHeadNameFromFeeTypeAndHeadIndex(1, rs.getInt(1));
            amount=rs.getDouble(2);
            collection.add(new FeeStructure(group,head,amount));
           }

           group=1;

           ps=con.prepareStatement("select head,amount from monthlyfeeamounthead where class=?");
           ps.setInt(1, cls);
           rs=ps.executeQuery();
           while(rs.next())
           {
            head=mp.getFeeHeadNameFromFeeTypeAndHeadIndex(0, rs.getInt(1));
            amount=rs.getDouble(2);
            if(amount<1.00)
            head=head+" ( As per facility availed ) ";
            collection.add(new FeeStructure(group,head,amount));
           }

           group=2;

           ps=con.prepareStatement("select head,amount from periodicfeeamounthead where class=?");
           ps.setInt(1, cls);
           rs=ps.executeQuery();
           while(rs.next())
           {
            head=mp.getFeeHeadNameFromFeeTypeAndHeadIndex(2, rs.getInt(1));
            amount=rs.getDouble(2);
            collection.add(new FeeStructure(group,head,amount));
           }


                JRBeanCollectionDataSource src = new JRBeanCollectionDataSource(collection);
                JasperReport js = JasperCompileManager.compileReport("reports/fee/fee_structure.jrxml");
                JasperPrint pr = JasperFillManager.fillReport(js,map,src);
                JasperViewer jv = new JasperViewer(pr, false);
                jv.setTitle("Fee Structure for class "+cls);
                jv.setVisible(true);
               // con.close();

            }
            catch(Exception e)
            {
              System.out.println("Error is ..." +e);
            }
        }
        

 public void searchByDateNClass()
{
   // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
    try
    {
        ps=con.prepareStatement("select * from admissionenquiry where date=? and class=? order by serial");
        ps.setString(1,dateofenquiry.getText());
        ps.setInt(2,Integer.parseInt(classmap1.get(classCombo.getSelectedItem().toString()).toString()));

        rs=ps.executeQuery();
       // System.out.println("value"+rs.next());
        populateTable(rs);
 //System.out.println(rs.getString(9));
    //con.close();
    }catch(Exception e)
    {
e.printStackTrace();
    }
}
 public void reset()
    {
        dm.setRowCount(1);
        dm.setValueAt("", 0, 0);
                dm.setValueAt("", 0, 1);
                 dm.setValueAt("", 0, 2);
                 dm.setValueAt("", 0, 3);
                dm.setValueAt("", 0, 4);
                 dm.setValueAt("", 0, 5);
                  dm.setValueAt("", 0, 6);
                 dm.setValueAt("", 0, 7);
                 jLabel4.setText("Enter Values in row below,choose class and date from above");
    }
  public void allAdmissionEnquiry()
  {
    //  con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();

     try
     {
       ps=con.prepareStatement("select * from admissionenquiry where session=? order by serial") ;
ps.setInt(1,sessionValue);
       rs=ps.executeQuery();
      populateTable(rs);

 // con.close();
     }catch(Exception e)
   {
e.printStackTrace();
   }
  }

    public void studentDetailOnBasisOfName()
{
    // con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();


         int i=0,j=0;

     try
     {
       ps=con.prepareStatement("select * from admissionenquiry where studentname like ? order by serial") ;
      ps.setString(1,studentname.getText()+"%");
         //ps.setInt(2,id);
      System.out.println("n");
       rs=ps.executeQuery();
      populateTable(rs);

   //con.close();
     }catch(Exception e)
   {
e.printStackTrace();
   }
}
     public void viewEnquiryByDate()
    {
        int i=0,j=0;
   // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
    try
    {
        ps=con.prepareStatement("select * from admissionenquiry where date>=? and date<=? order by serial");
        ps.setString(1,dateofenquiry.getText());
ps.setString(2,dateofenquiry1.getText());
        rs=ps.executeQuery();
       // System.out.println("value"+rs.next());
        populateTable(rs);
 //System.out.println(rs.getString(9));
   // con.close();
    }catch(Exception e)
    {
e.printStackTrace();
    }
    }
    public void viewEnquiryByClass()
    {
        int i=0,j=0;
   // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
    try
    {
        ps=con.prepareStatement("select * from admissionenquiry where class=? order by serial");
        ps.setInt(1,Integer.parseInt(classmap1.get(classCombo.getSelectedItem().toString()).toString()));

        rs=ps.executeQuery();
       // System.out.println("value"+rs.next());
        populateTable(rs);
 
    }catch(Exception e)
    {
e.printStackTrace();
    }
    }
    public void populateTable(ResultSet rs)
    {
        int i=0,j=0;
        try
        {
            if(rs.next())
            {
            rs.first();
            rs.previous();

            while(rs.next())
            {
                j++;
            }
            rs.first();
            rs.previous();
            System.out.println(dateofenquiry.getText());
            dm.setRowCount(j);
            System.out.println(j);
            //rs.next();
            while(rs.next())
            {
            dm.setValueAt(rs.getInt(1), i, 0);
                dm.setValueAt(rs.getString(2), i, 1);
                 dm.setValueAt(rs.getString(3), i, 2);
                 dm.setValueAt(classmap.get(rs.getInt(4)), i, 3);
                dm.setValueAt(rs.getString(5), i, 4);
                 dm.setValueAt(rs.getString(6), i, 5);
                  dm.setValueAt(rs.getString(7), i, 6);
                 dm.setValueAt(rs.getString(8), i, 7);

                 i++;
        }
            jLabel4.setText("It will show the data of current session");
            }else
                dm.setRowCount(0);
    }catch(Exception e)
    {
e.printStackTrace();
    }
    }
    public void saveEnquiry()
{
   
            try
            {
   ps=con.prepareStatement("insert into admissionenquiry(studentname,fathername,class,address,ph,remarks,date,session) values(?,?,?,?,?,?,?,?)");

                ps.setString(1,dm.getValueAt(0,1).toString());//name
                ps.setString(2,dm.getValueAt(0,2).toString());//gname

              //  ps.setInt(3,Integer.parseInt(classmap1.get(dm.getValueAt(0,3).toString()).toString()));//class
              ps.setInt(3,Integer.parseInt(classmap1.get(classCombo.getSelectedItem().toString()).toString()));//class

                ps.setString(4,dm.getValueAt(0,4).toString());//address
                ps.setString(5,dm.getValueAt(0,5).toString());//ph
                 ps.setString(6,dm.getValueAt(0,6).toString());//remarks

                 ps.setString(7, datum);
ps.setInt(8,sessionValue);
                ps.executeUpdate();
                jLabel4.setText("New Enquiry Saved");

          // con.close();
            }

            catch(Exception e)
            {
e.printStackTrace();
            }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private datechooser.beans.DateChooserCombo dateofenquiry;
    private datechooser.beans.DateChooserCombo dateofenquiry1;
    private javax.swing.JButton feeStructureButton;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JButton newEnquiryButton;
    private javax.swing.JButton printButton;
    private javax.swing.JButton printButton2;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchByDate;
    private javax.swing.JComboBox sessionCombo;
    private javax.swing.JButton showAllButton;
    private javax.swing.JTextField studentname;
    // End of variables declaration//GEN-END:variables
//Connection con;
ResultSet rs,rs1,rs2;
PreparedStatement ps;
public Integer sessionValue;
}
