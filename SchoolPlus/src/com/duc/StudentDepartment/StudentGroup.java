/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StudentGroup.java
 *
 * Created on Sep 19, 2009, 1:19:59 PM
 */

package com.duc.StudentDepartment;
import java.sql.*;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JTable.PrintMode;
import javax.swing.table.DefaultTableModel;
import static com.duc.DatabaseConnection.DatabaseConnection.*;

/**
 *
 * @author Ravi Dangaich
 */
public class StudentGroup extends javax.swing.JInternalFrame {
DefaultTableModel dm1,dm2;

HashMap classmap=new HashMap();
    HashMap sectionmap=new HashMap();

    HashMap classmap1=new HashMap();
    HashMap sectionmap1=new HashMap();
    /** Creates new form StudentGroup */
    public StudentGroup() {
        initComponents();
        pack();
        dm1 = (DefaultTableModel)jTable1.getModel();
        dm1.setRowCount(0);
         dm2 = (DefaultTableModel)jTable2.getModel();
        dm2.setRowCount(0);

          getClassIndexName();
       getSectionIndexName();

        getClassIndexFromName();
       getSectionIndexFromName();
        fromClass();

         showAddedGroup();
    }

      public void getClassIndexName()
    {
        try
        {
            //con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
            ps=con.prepareStatement("select classid,classtitle from classsetup");
            rs=ps.executeQuery();
            while(rs.next())
            {
                classmap.put(rs.getInt(1),rs.getString(2));
            }

        }catch(Exception e)
        {
            e.printStackTrace();
        }

    }

     public void getSectionIndexName()
    {
         try
        {
             // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
            ps=con.prepareStatement("select sectionid,sectiontitle from sectionsetuplist");
            rs=ps.executeQuery();
            while(rs.next())
            {
                sectionmap.put(rs.getInt(1),rs.getString(2));
            }

        }catch(Exception e)
        {
            e.printStackTrace();
        }
    }

     public void getClassIndexFromName()
    {
        try
        {
           // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
            ps=con.prepareStatement("select classid,classtitle from classsetup");
            rs=ps.executeQuery();
            while(rs.next())
            {
                classmap1.put(rs.getString(2),rs.getInt(1));
            }

        }catch(Exception e)
        {
            e.printStackTrace();
        }

    }

     public void getSectionIndexFromName()
    {
         try
        {
            //  con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
            ps=con.prepareStatement("select sectionid,sectiontitle from sectionsetuplist");
            rs=ps.executeQuery();
            while(rs.next())
            {
                sectionmap1.put(rs.getString(2),rs.getInt(1));
            }

        }catch(Exception e)
        {
            e.printStackTrace();
        }
    }
public void fromClass()
{
     try
    {

         ps = con.prepareStatement("select * from classsetup");

             rs = ps.executeQuery();


            while (rs.next())
            {
        classCombo.addItem(rs.getString(1));


            }

 // con.close();
         }
    catch(Exception e)
    {
        System.err.println("Error is"+e);
    }
}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        addgroup = new javax.swing.JTextField();
        addGroupButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        classCombo = new javax.swing.JComboBox();
        addStudentButton = new javax.swing.JButton();
        removeStudentButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        admissionNoCombo = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        closeButton = new javax.swing.JButton();
        printButton = new javax.swing.JButton();
        removeGroupButton = new javax.swing.JButton();
        showgroupButton = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Student's Group Creator");

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jTable1.setBackground(new java.awt.Color(204, 204, 255));
        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Admission No.", "Name", "Class"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);

        jPanel3.setBackground(new java.awt.Color(51, 204, 255));

        jLabel2.setText("              Create New Group");

        addGroupButton.setText("Add Group");
        addGroupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGroupButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                        .addGap(53, 53, 53))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(addGroupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(addgroup, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addgroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addGroupButton)
                .addContainerGap(6, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(51, 204, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setText("Class");

        classCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "choose" }));
        classCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classComboActionPerformed(evt);
            }
        });

        addStudentButton.setText("Add Student");
        addStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentButtonActionPerformed(evt);
            }
        });

        removeStudentButton.setText("Remove");
        removeStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeStudentButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Admission No.");

        admissionNoCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "choose" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(admissionNoCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(classCombo, 0, 98, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeStudentButton, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                    .addComponent(addStudentButton, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(classCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addStudentButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(admissionNoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeStudentButton))
                .addContainerGap())
        );

        jTextPane1.setBackground(new java.awt.Color(204, 204, 204));
        jTextPane1.setEditable(false);
        jTextPane1.setFont(new java.awt.Font("Tahoma", 0, 18));
        jTextPane1.setText("                                             Create Your Groups");
        jScrollPane2.setViewportView(jTextPane1);

        jTextPane2.setBackground(new java.awt.Color(204, 204, 204));
        jTextPane2.setEditable(false);
        jTextPane2.setFont(new java.awt.Font("Tahoma", 0, 12));
        jTextPane2.setText("Create group of Students on the basis of similar properties like same parentage, fee exempted students, poor students, naughty students or teacher's siblings");
        jScrollPane3.setViewportView(jTextPane2);

        jTable2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Existing Groups", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable2);
        jTable2.getColumnModel().getColumn(0).setResizable(false);
        jTable2.getColumnModel().getColumn(1).setResizable(false);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        removeGroupButton.setText("Remove Group");
        removeGroupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeGroupButtonActionPerformed(evt);
            }
        });

        showgroupButton.setText("Show Group");
        showgroupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showgroupButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(removeGroupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showgroupButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, 0, 96, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, 0, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeButton)
                    .addComponent(printButton)
                    .addComponent(removeGroupButton)
                    .addComponent(showgroupButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addGroupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGroupButtonActionPerformed
addGroup();        // TODO add your handling code here:
}//GEN-LAST:event_addGroupButtonActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
 try
        {
        String s="Student Group Result";
        MessageFormat header=new MessageFormat(s);
        jTable1.print(PrintMode.FIT_WIDTH, header, null);
        }

        catch(Exception e)
        {
         System.err.println("Error in printing student group");
        }
        // TODO add your handling code here:
}//GEN-LAST:event_printButtonActionPerformed

    private void addStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentButtonActionPerformed
addStudent();        // TODO add your handling code here:
}//GEN-LAST:event_addStudentButtonActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
int currentrow=jTable2.getSelectedRow();
String groupname=dm2.getValueAt(currentrow,0).toString();
showMember(groupname);        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MouseClicked

    private void removeStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeStudentButtonActionPerformed
removeMember();        // TODO add your handling code here:
}//GEN-LAST:event_removeStudentButtonActionPerformed

    private void removeGroupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeGroupButtonActionPerformed
removeGroup();
// TODO add your handling code here:
}//GEN-LAST:event_removeGroupButtonActionPerformed

    private void classComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classComboActionPerformed
admissionNoFilter();        // TODO add your handling code here:
}//GEN-LAST:event_classComboActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
this.dispose();        // TODO add your handling code here:
}//GEN-LAST:event_closeButtonActionPerformed

    private void showgroupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showgroupButtonActionPerformed
showAddedGroup();        // TODO add your handling code here:
}//GEN-LAST:event_showgroupButtonActionPerformed

    public void admissionNoFilter()
    {
        // con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
        try
        {
            ps = con.prepareStatement("select * from studententry where class=?");
            ps.setInt(1, Integer.parseInt(classmap1.get(classCombo.getSelectedItem().toString()).toString()));
             rs = ps.executeQuery();
           
admissionNoCombo.removeAllItems();

            while(rs.next())
            {

                admissionNoCombo.addItem(rs.getString(1));

            }

//con.close();

        }  catch(Exception e)
        {
            e.printStackTrace();
        }

    }
    public void removeMember()
{
    // con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
        int row = jTable1.getSelectedRow();
         System.out.println("row no. selected"+row);
        try
        {
         ps=con.prepareStatement("delete from studentgroupmember where memberid=?");

         ps.setString(1,dm1.getValueAt(row, 0).toString());
         ps.executeUpdate();
         dm1.removeRow(row);
         // con.close();
         System.out.println("DataBase Conection Closed");
    }
        catch(Exception e)
        {
            System.err.println("Error"+e);
        }
}

public void removeGroup()
{
     //con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
        int row = jTable2.getSelectedRow();
         System.out.println("row no. selected"+row);
        try
        {
         ps=con.prepareStatement("delete from studentgroup where groupname=?");
String groupname=dm2.getValueAt(row, 0).toString();
         ps.setString(1,dm2.getValueAt(row, 0).toString());
         ps.executeUpdate();
         dm2.removeRow(row);

         ps=con.prepareStatement("delete from studentgroupmember where groupname=?");

       ps.setString(1,groupname);
         ps.executeUpdate();
         //dm1.removeRow(row);
         showMember(groupname);
          //con.close();
         System.out.println("DataBase Conection Closed");
    }
        catch(Exception e)
        {
            System.err.println("Error"+e);
        }
}

    public void addStudent()
{
    int currentrow=jTable2.getSelectedRow();
    String groupname=dm2.getValueAt(currentrow,0).toString();
  // con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
 try
 {
     ps=con.prepareStatement("select * from studentgroupmember where memberid=?");
     ps.setString(1,admissionNoCombo.getSelectedItem().toString());
     rs=ps.executeQuery();
     if(rs.next())
     {
      JOptionPane.showConfirmDialog(null,"This memeber exists alread in this group","Memeber Exists",JOptionPane.PLAIN_MESSAGE);
     }
     else
     {
     ps=con.prepareStatement("insert into studentgroupmember values(?,?)");

     ps.setString(1,groupname);
     ps.setString(2,admissionNoCombo.getSelectedItem().toString());
    // ps.setString(2,new SimpleDateFormat("yyyy-MM-dd").format(new java.util.Date()));

         ps.executeUpdate();
     }
 }catch(Exception e)
 {
     e.printStackTrace();
 }
showMember(groupname);
}
  public void showMember(String groupname)
  {
     // con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
       try
       {
           ps = con.prepareStatement("select * from studentgroupmember where groupname=?");
ps.setString(1,groupname);
           rs = ps.executeQuery();

            int i = 0,j=0;
          while(rs.next() )
            {
                j++;
            }
            rs.first();

            rs.previous();

            dm1.setRowCount(j);
            while(rs.next())
            {
                dm1.setValueAt(rs.getString(2), i, 0);
                ps1 = con.prepareStatement("select * from studententry where id=?");
ps1.setString(1,rs.getString(2));
           rs1 = ps1.executeQuery();


           rs1.next();
                dm1.setValueAt(rs1.getString(2), i, 1);
                dm1.setValueAt(classmap.get(rs1.getInt(9)), i, 2);

                i++;
            }

           for(int r=0;i<dm1.getRowCount();r++)
           {
             ps = con.prepareStatement("select * from studententry where id=?");
ps.setString(1,dm1.getValueAt(r,0).toString());
           rs = ps.executeQuery();


           rs.next();
                dm1.setValueAt(rs.getString(2), r, 1);
                dm1.setValueAt(classmap.get(rs1.getInt(9)), r, 2);
               
           }
           // con.close();
            System.out.println("Database closed");
       }

       catch(Exception e)
       {
          e.printStackTrace();
       }

  }
    public void addGroup()
{
    if(addgroup.getText().isEmpty())
            JOptionPane.showConfirmDialog(null,"No group filled","Group Alarm",JOptionPane.OK_CANCEL_OPTION);
    else
{
       // con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
 try
 {
     ps=con.prepareStatement("insert into studentgroup values(?,?)");

     ps.setString(1,addgroup.getText());
     ps.setString(2,datum);
     
         ps.executeUpdate();

 }catch(Exception e)
 {
     e.printStackTrace();
 }

    }   showAddedGroup();
}

public void showAddedGroup()
{
    // con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
       try
       {
           ps = con.prepareStatement("select * from studentgroup");

           rs = ps.executeQuery();

            int i = 0,j=0;
            if(rs.next())
            {
            rs.first();
            rs.previous();

          while(rs.next() )
            {
                j++;
            }
            rs.first();

            rs.previous();

            dm2.setRowCount(j);
            while(rs.next())
            {
                dm2.setValueAt(rs.getString(1), i, 0);

                dm2.setValueAt(rs.getString(2), i, 1);

                i++;
            }
          //  con.close();
            System.out.println("Database closed");

       }
       }
       catch(Exception e)
       {
          e.printStackTrace();
       }

}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addGroupButton;
    private javax.swing.JButton addStudentButton;
    private javax.swing.JTextField addgroup;
    private javax.swing.JComboBox admissionNoCombo;
    private javax.swing.JComboBox classCombo;
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JButton printButton;
    private javax.swing.JButton removeGroupButton;
    private javax.swing.JButton removeStudentButton;
    private javax.swing.JButton showgroupButton;
    // End of variables declaration//GEN-END:variables
//Connection con;
ResultSet rs,rs1;
 PreparedStatement ps,ps1;
}
