/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MakeZeroInventory1.java
 *
 * Created on Sep 30, 2009, 9:38:26 AM
 */

package com.duc.SpecialDepartment.InventorySection.ServiceDepartment;
import com.duc.ImportSection.MapForIndex;
import com.duc.ImportSection.MapForInventoryIndex;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import net.sf.jasperreports.view.JasperViewer;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.File;
import static com.duc.DatabaseConnection.DatabaseConnection.*;
/**
 *
 * @author Ravi Dangaich
 */
public class MakeZeroInventory1 extends javax.swing.JInternalFrame {
DefaultTableModel dm1;
DefaultTableModel dm2;
//MapForIndex mp=new MapForIndex();
//MapForInventoryIndex mpi=new MapForInventoryIndex();
    HashMap category=mpi.getCategoryIndexToName();
    HashMap mode=mpi.getModeIndexToName();
    HashMap schoolpurchaser=mpi.getSchoolPurchaserIndexToName();
    HashMap vendorname=mpi.getVendorNameIndexToName();
    HashMap unit=mpi.getUnitIndexToName();
    HashMap classmap=mp.getClassIndexName();
    /** Creates new form MakeZeroInventory1 */
    public MakeZeroInventory1() {
        initComponents();
        pack();
        //this.setLocationRelativeTo(null);
        dm1 = (DefaultTableModel) jTable1.getModel();
        dm1.setRowCount(0);
        dm2 = (DefaultTableModel) jTable2.getModel();
        dm2.setRowCount(0);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        printRemainingButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        showRemainingButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        printReturnedButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        returnButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Inventory Reverter");

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        jTextPane2.setBackground(new java.awt.Color(204, 204, 204));
        jTextPane2.setEditable(false);
        jTextPane2.setFont(new java.awt.Font("Tahoma", 0, 18));
        jTextPane2.setText("                                     Make Inventory Zero Utility"); // NOI18N
        jScrollPane3.setViewportView(jTextPane2);

        jTextPane3.setBackground(new java.awt.Color(204, 204, 204));
        jTextPane3.setEditable(false);
        jTextPane3.setFont(new java.awt.Font("Tahoma", 0, 12));
        jTextPane3.setText("Check your Payaccount for all the sold out inventories."); // NOI18N
        jScrollPane4.setViewportView(jTextPane3);

        printRemainingButton.setText("Print Remaining"); // NOI18N
        printRemainingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printRemainingButtonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Category", "Name", "Qty", "Opening Balance", "Mode", "C.P.", "S.P.", "Vendor", "Prop1", "Prop2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        showRemainingButton.setText("Show Remaining"); // NOI18N
        showRemainingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showRemainingButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit"); // NOI18N
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        printReturnedButton.setText("Print Returned"); // NOI18N
        printReturnedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printReturnedButtonActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Category", "Name", "Qty", "Opening Balance", "Mode", "C.P.", "S.P.", "Vendor", "Prop1", "Prop2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        returnButton.setText("Return"); // NOI18N
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("*Select the Inventory Name or vendor which product need to be returned one by one and press return."); // NOI18N

        jLabel2.setText("*Take the printout  and report print of Upper table(Total Inventory before zero) and lower table(inventory to be returned consecutively."); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 812, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(179, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(371, Short.MAX_VALUE)
                .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(356, 356, 356))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(printRemainingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99)
                .addComponent(showRemainingButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addComponent(printReturnedButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(122, 122, 122)
                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 812, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(5, 5, 5)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(returnButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(printRemainingButton)
                    .addComponent(exitButton)
                    .addComponent(printReturnedButton)
                    .addComponent(showRemainingButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void printRemainingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printRemainingButtonActionPerformed

     /*   try {
            jTable1.print();
        } catch(Exception e) {
        }// TODO add your handling code here:*/
        printRemainingInventory();
}//GEN-LAST:event_printRemainingButtonActionPerformed

    private void showRemainingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showRemainingButtonActionPerformed
        showAllInventory();        // TODO add your handling code here:
}//GEN-LAST:event_showRemainingButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        this.dispose();        // TODO add your handling code here:
}//GEN-LAST:event_exitButtonActionPerformed

    private void printReturnedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printReturnedButtonActionPerformed
        returnToVendor();        // TODO add your handling code here:
}//GEN-LAST:event_printReturnedButtonActionPerformed

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        returnTable();        // TODO add your handling code here:
}//GEN-LAST:event_returnButtonActionPerformed
 public void showAllInventory()
    {

      // con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
        try
        {
            p = con.prepareStatement("select * from inventorydeposit left join invclasswise on InventoryId=invid");
            rs = p.executeQuery();
         commonFilter(rs);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }


    }

      public void commonFilter(ResultSet rs)
    {
        int i = 0,j=0;

        try
        {
            while(rs.next())

            {
                j++;
            }
            rs.first();
            rs.previous();
            dm1.setRowCount(j);
            while(rs.next())
            {
                dm1.setValueAt(rs.getInt(1), i, 0);//id
                dm1.setValueAt(category.get(rs.getInt(2)), i, 1);//category
                dm1.setValueAt(rs.getString(3), i, 2);//name
                dm1.setValueAt(rs.getDouble(5), i, 3);//quatity
                 dm1.setValueAt(rs.getDouble(6), i, 4);//opening balance
                dm1.setValueAt(mode.get(rs.getInt(9)), i, 5);//mode
                dm1.setValueAt(rs.getDouble(7), i, 6);//cp
                dm1.setValueAt(rs.getDouble(8), i, 7);//sp
                 dm1.setValueAt(vendorname.get(rs.getInt(10)), i, 8);//vendor
               // dm1.setValueAt(classmap.get(rs.getInt(17)), i, 9);//class
                 dm1.setValueAt(rs.getString(12), i,9);//p1
                dm1.setValueAt(rs.getString(13), i, 10);//p2


                i++;
                // con.close();
            System.out.println();
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }

    }
public void returnTable()
{
    doupdate++;
System.out.println("click times"+doupdate);
//if(doupdate==1)
{
         currentrow=jTable1.getSelectedRow();
int currentcolumn=jTable1.getSelectedColumn();
int count=jTable1.getRowCount();
        //System.out.println(""+i);
int invid=Integer.parseInt(jTable1.getValueAt(currentrow,0).toString());
        String category= String.valueOf(jTable1.getValueAt(currentrow, 1));
        String name= String.valueOf(jTable1.getValueAt(currentrow, 2));
        Double quantity= Double.parseDouble(jTable1.getValueAt(currentrow, 3).toString());
         Double opening= Double.parseDouble(jTable1.getValueAt(currentrow, 4).toString());
      String mode= String.valueOf(jTable1.getValueAt(currentrow,5));
        Double cp= Double.parseDouble(jTable1.getValueAt(currentrow, 6).toString());
        Double sp= Double.parseDouble(jTable1.getValueAt(currentrow, 7).toString());
        String vendor= String.valueOf(jTable1.getValueAt(currentrow, 8));
       // String schoolclass= String.valueOf(jTable1.getValueAt(currentrow, 9));
        String property1= String.valueOf(jTable1.getValueAt(currentrow, 9));
        String property2= String.valueOf(jTable1.getValueAt(currentrow, 10));

//dm1.removeRow(currentrow);
        dm2.setRowCount(count);
        try{
            dm2.setValueAt(invid, currentrow, 0);
        dm2.setValueAt(category, currentrow, 1);//inventoryname
                dm2.setValueAt(name ,currentrow, 2);//quantity
                dm2.setValueAt(quantity, currentrow, 3);//amount
                dm2.setValueAt(opening, currentrow, 4);//date
                   dm2.setValueAt(mode, currentrow, 5);
        dm2.setValueAt(cp, currentrow, 6);//inventoryname
                dm2.setValueAt(sp, currentrow, 7);//quantity
                dm2.setValueAt(vendor, currentrow, 8);//amount
               // dm2.setValueAt(schoolclass, currentrow, 9);//date
                 dm2.setValueAt(property1, currentrow, 9);//amount
                dm2.setValueAt(property2, currentrow,10);//date
dm1.removeRow(currentrow);
      }
      catch(Exception e)
      {

      }
        executeUpdateForReturnItem(invid);
}
}
public void executeUpdateForReturnItem(int invid)
{

  // con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
        try
        {
            ps = con.prepareStatement("update inventorydeposit set invdeposit=? where inventoryid=?");
           ps.setInt(1,0);
            ps.setInt(2,invid);
            ps.executeUpdate();;
            System.out.println("The Inventory is returned and Remained quantity=0");
}catch(Exception e)
{
    e.printStackTrace();
}
}

    public void returnToVendor()
    {
         JRTableModelDataSource src = new JRTableModelDataSource(dm2);
        HashMap map = new HashMap();
        BufferedImage bimg = null;
       try {
            bimg = ImageIO.read(new File("images/logo.jpg"));
//bimg = ImageIO.read(new File("./img/SchoolPlusLogo.jpg"));

        } catch (Exception ex) {
            Logger.getLogger(MakeZeroInventory1.class.getName()).log(Level.SEVERE, null, ex);
        }
       map.put("logo",bimg);
        //System.out.println(""+dm.getValueAt(3, 3));

            try {
                JasperReport js = JasperCompileManager.compileReport("reports/nameSameJustTheHead/returntovendor.jrxml");
              // JasperReport js = JasperCompileManager.compileReport("./reports/report2.jrxml");
                JasperPrint pr = JasperFillManager.fillReport(js, map,src);
                JasperViewer jv = new JasperViewer(pr, false);
                jv.setVisible(true);
            }
            catch (Exception ex) {
                Logger.getLogger(MakeZeroInventory1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }

    public void printRemainingInventory()
    {
         JRTableModelDataSource src = new JRTableModelDataSource(dm1);
        HashMap map = new HashMap();
        BufferedImage bimg = null;
       try {
            bimg = ImageIO.read(new File("images/logo.jpg"));
//bimg = ImageIO.read(new File("./img/SchoolPlusLogo.jpg"));

        } catch (Exception ex) {
            Logger.getLogger(MakeZeroInventory1.class.getName()).log(Level.SEVERE, null, ex);
        }
       map.put("logo",bimg);
        //System.out.println(""+dm.getValueAt(3, 3));

            try {
                JasperReport js = JasperCompileManager.compileReport("reports/nameSameJustTheHead/remaininventory.jrxml");
              // JasperReport js = JasperCompileManager.compileReport("./reports/report2.jrxml");
                JasperPrint pr = JasperFillManager.fillReport(js, map,src);
                JasperViewer jv = new JasperViewer(pr, false);
                jv.setVisible(true);
            }
            catch (Exception ex) {
                Logger.getLogger(MakeZeroInventory1.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JButton printRemainingButton;
    private javax.swing.JButton printReturnedButton;
    private javax.swing.JButton returnButton;
    private javax.swing.JButton showRemainingButton;
    // End of variables declaration//GEN-END:variables
//public Connection con;
   public  PreparedStatement ps,p;
   public  ResultSet rs;
   public static int doupdate=0,oldrow=0,currentrow=0;
}
