/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OpeningBalanceView1.java
 *
 * Created on Sep 30, 2009, 9:39:58 AM
 */

package com.duc.SpecialDepartment.InventorySection.ViewDepartment;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.event.*;
import java.text.MessageFormat;
import javax.swing.JTable.PrintMode;
import static com.duc.DatabaseConnection.DatabaseConnection.*;
/**
 *
 * @author Ravi Dangaich
 */
public class OpeningBalanceView1 extends javax.swing.JInternalFrame {
DefaultTableModel dm;
    /** Creates new form OpeningBalanceView1 */
    public OpeningBalanceView1() {
        initComponents();
         fromInventoryName();
        pack();
        //this.setLocationRelativeTo(null);
        //setScreenSize();
         dm = (DefaultTableModel) jTable1.getModel();
        dm.setRowCount(0);

         showAllInventoryOpeningBalance();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        inventoryIdText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        printOpeningButton = new javax.swing.JButton();
        showAllOpeningButton = new javax.swing.JButton();
        inventoryNameCombo = new javax.swing.JComboBox();
        exitButton = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Inventory Balance Opener");

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        jLabel1.setText("Inventory Id"); // NOI18N

        jLabel2.setText("Inventory Name"); // NOI18N

        inventoryIdText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                inventoryIdTextMousePressed(evt);
            }
        });
        inventoryIdText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryIdTextActionPerformed(evt);
            }
        });
        inventoryIdText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inventoryIdTextKeyPressed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(204, 204, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Inventory Id", "Name", "Opening Quantity", "Current Deposit", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setText("                Inventory History"); // NOI18N

        jTextPane2.setBackground(new java.awt.Color(204, 204, 204));
        jTextPane2.setEditable(false);
        jTextPane2.setFont(new java.awt.Font("Tahoma", 0, 18));
        jTextPane2.setText("                                                    Opening Balance"); // NOI18N
        jScrollPane3.setViewportView(jTextPane2);

        jTextPane3.setBackground(new java.awt.Color(204, 204, 204));
        jTextPane3.setEditable(false);
        jTextPane3.setFont(new java.awt.Font("Tahoma", 0, 12));
        jTextPane3.setText("CheckOut the opening balance of each of the inventories.."); // NOI18N
        jScrollPane4.setViewportView(jTextPane3);

        printOpeningButton.setText("Print"); // NOI18N
        printOpeningButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printOpeningButtonActionPerformed(evt);
            }
        });

        showAllOpeningButton.setText("Show All"); // NOI18N
        showAllOpeningButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllOpeningButtonActionPerformed(evt);
            }
        });

        inventoryNameCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "choose" }));
        inventoryNameCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryNameComboActionPerformed(evt);
            }
        });

        exitButton.setText("Exit"); // NOI18N
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 797, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(412, Short.MAX_VALUE))
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 797, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(printOpeningButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(199, 199, 199)
                        .addComponent(showAllOpeningButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inventoryNameCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inventoryIdText, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                .addGap(557, 557, 557))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(inventoryIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(inventoryNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(printOpeningButton)
                            .addComponent(exitButton))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(showAllOpeningButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inventoryIdTextMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventoryIdTextMousePressed
        // TODO add your handling code here:
}//GEN-LAST:event_inventoryIdTextMousePressed

    private void inventoryIdTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryIdTextActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_inventoryIdTextActionPerformed

    private void inventoryIdTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inventoryIdTextKeyPressed
        int keycode=evt.getKeyCode();
        if(keycode==KeyEvent.VK_ENTER)
            findInventoryName();        // TODO add your handling code here:
}//GEN-LAST:event_inventoryIdTextKeyPressed

    private void printOpeningButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printOpeningButtonActionPerformed

        try
        {
        String s="Inventory Opening Balance Record";
        MessageFormat header=new MessageFormat(s);
        jTable1.print(PrintMode.FIT_WIDTH, header, null);
        }

        catch(Exception e)
        {
         System.err.println("Error in printing student search");
        }
}//GEN-LAST:event_printOpeningButtonActionPerformed

    private void showAllOpeningButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllOpeningButtonActionPerformed
               // TODO add your handling code here:
}//GEN-LAST:event_showAllOpeningButtonActionPerformed

    private void inventoryNameComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryNameComboActionPerformed
        //if(jCheckBox1.isSelected())
        inventoryNameFilter();        // TODO add your handling code here:
}//GEN-LAST:event_inventoryNameComboActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        this.dispose();        // TODO add your handling code here:
}//GEN-LAST:event_exitButtonActionPerformed
 public void inventoryNameFilter()
    {
      //  con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
        try
        {
            ps = con.prepareStatement("select * from inventorydeposit where invname=?");
            ps.setString(1, inventoryNameCombo.getSelectedItem().toString());
             rs = ps.executeQuery();
            int i = 0,j=0;
            while(rs.next())

            {
                j++;
            }
            rs.first();
            //jTextField2.setText(rs.getString(4));
            rs.previous();
            dm.setRowCount(j);


 rs.next();
 inventoryIdText.setText(String.valueOf(rs.getInt(1)));
            dm.setValueAt(rs.getInt(1), i, 0);//id
            dm.setValueAt(rs.getString(3), i, 1);//name
            dm.setValueAt(rs.getDouble(6), i, 2);//quantity
             dm.setValueAt(rs.getDouble(5), i, 3);//current depositquantity


             dm.setValueAt(rs.getString(15), i, 4);//time




        }  catch(Exception e)
        {
            e.printStackTrace();
        }

    }
     public void fromInventoryName()
   {
        try{

//con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();


         ps = con.prepareStatement("select * from inventorydeposit");

             rs = ps.executeQuery();


            while (rs.next())
        inventoryNameCombo.addItem(rs.getString(3));




    }
    catch(Exception e)
    {
        System.err.println("Error is"+e);
    }
   }
public void findInventoryName()
{
    //con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
        try
        {
            ps = con.prepareStatement("select * from inventorydeposit where inventoryid=?");

            ps.setInt(1, Integer.parseInt(inventoryIdText.getText()));
            rs = ps.executeQuery();
            while(rs.next())
                inventoryNameCombo.setSelectedItem(rs.getString(3).toString());
        }catch(Exception e)
        {
            e.printStackTrace();
        }


}


    public void showAllInventoryOpeningBalance()
{
     int i = 0,j=0;

        //con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
        try
        {
            ps = con.prepareStatement("select * from inventorydeposit");
            //ps.setInt(1, Integer.parseInt(jTextField1.getText()));
            rs = ps.executeQuery();
           if(rs.next())
           {
               
           rs.first();
           rs.previous();
            while(rs.next())

            {
                j++;
            }

            rs.first();
            //jTextField2.setText(rs.getString(4));
            rs.previous();
            dm.setRowCount(j);
            while(rs.next())
            {
                dm.setValueAt(rs.getInt(1), i, 0);//inventoryid
                dm.setValueAt(rs.getString(3), i, 1);//inventoryname
                dm.setValueAt(rs.getDouble(6), i, 2);//inventoryquantity
                 dm.setValueAt(rs.getDouble(5), i, 3);//cuurent deposit quantity
                dm.setValueAt(rs.getString(15), i, 4);//date
//if(Double.parseDouble(dm.getValueAt(i, 3).toString())==0.0)
    //JOptionPane.showConfirmDialog(null,rs.getString(3)+"  is empty","Stock Empty",JOptionPane.OK_OPTION);



                i++;
                // con.close();
            System.out.println();
            }
           }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exitButton;
    private javax.swing.JTextField inventoryIdText;
    private javax.swing.JComboBox inventoryNameCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JButton printOpeningButton;
    private javax.swing.JButton showAllOpeningButton;
    // End of variables declaration//GEN-END:variables
//private Connection con;
    private  PreparedStatement ps;
    ResultSet rs;
}
