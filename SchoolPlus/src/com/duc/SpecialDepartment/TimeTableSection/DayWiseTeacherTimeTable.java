/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DayWiseTeacherTimeTable.java
 *
 * Created on Jan 10, 2010, 6:57:25 PM
 */

package com.duc.SpecialDepartment.TimeTableSection;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.decorator.HighlighterFactory;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable.PrintMode;
import java.text.MessageFormat;
import java.util.HashMap;
import com.duc.ImportSection.MapForIndex;
import static com.duc.DatabaseConnection.DatabaseConnection.*;
import java.text.*;

/**
 *
 * @author sourabh
 */
public class DayWiseTeacherTimeTable extends javax.swing.JInternalFrame {

           //MapForIndex mp=new MapForIndex();
           //HashMap classmap1=mp.getClassIndexFromName();
           //HashMap subjectmap1=mp.getSubjectIndexFromName();
           HashMap classmap=mp.getClassIndexName();
           HashMap subjectmap=mp.getSubjectIndexToName();
           HashMap sectionmap=mp.getSectionIndexName();
          // HashMap sectionmap1=mp.getSectionIndexFromName();
           private DefaultTableModel model;
           ArrayList<String> tcodes=new ArrayList<String>();

    /** Creates new form DayWiseTeacherTimeTable */
    public DayWiseTeacherTimeTable() {
        initComponents();
        jXTable1.setHorizontalScrollEnabled(true);
        jXTable1.setHighlighters(HighlighterFactory.createAlternateStriping());
        model = new TimeTableModel(2).createDefaultModel();
        jXTable1.setModel(model);
        
        loadTeachers();
    }

    public void loadTeachers()
    {
        try
        {
          String t="";
          ps=con.prepareStatement("select distinct teachercode,name from `periodallotment`,`staffentry` where teachercode=code order by teachercode");
          rs=ps.executeQuery();
          int i=0;
          while(rs.next())
          i++;

          model.setRowCount(i);
          i=0;
          rs.first();
          rs.previous();

          tcodes.clear();
          while(rs.next())
          {
          tcodes.add(rs.getString(1));
          t="<html><font size=3>"+rs.getString(2)+" ["+rs.getString(1)+"]</font></html>";
          model.setValueAt(t, i, 0);
          i++;
          }
        }
        catch(Exception e)
        {
         e.printStackTrace();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jXTable1 = new org.jdesktop.swingx.JXTable();
        jLabel1 = new javax.swing.JLabel();
        cmbDay = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        jTextPane1.setBackground(new java.awt.Color(204, 204, 204));
        jTextPane1.setEditable(false);
        jScrollPane1.setViewportView(jTextPane1);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        jXTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jXTable1.setColumnControlVisible(true);
        jXTable1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jXTable1.setHorizontalScrollEnabled(true);
        jXTable1.setRowHeight(70);
        jScrollPane2.setViewportView(jXTable1);

        jLabel1.setText("Select Day");

        cmbDay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "MON", "TUE", "WED", "THU", "FRI", "SAT" }));
        cmbDay.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbDayItemStateChanged(evt);
            }
        });

        jButton1.setText("+");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("-");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Print");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 814, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbDay, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 172, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 834, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbDayItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbDayItemStateChanged
        // TODO add your handling code here:
        if(cmbDay.getSelectedIndex()<=0)
        {
        fillEmptyTimeTable();
        return;
        }
        loadAllTeacherTimeTable();
    }//GEN-LAST:event_cmbDayItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int i=jXTable1.getRowHeight();
        jXTable1.setRowHeight(i+5);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int i=jXTable1.getRowHeight();
        if(i>30)
        jXTable1.setRowHeight(i-5);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        super.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         try
        {         
        String s="Teacher's Schedule For Day: "+cmbDay.getSelectedItem().toString();
        MessageFormat header=new MessageFormat(s);
        jXTable1.print(PrintMode.FIT_WIDTH, header, null);
        }
        catch(Exception e)
        {
         System.err.println("Error in printing timetable");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    public void loadAllTeacherTimeTable()
    {
      int r=0,c=0;
      String period="";
      fillEmptyTimeTable();
      try
      {
          ps=con.prepareStatement("select teachercode,class,section,subject,periodallotment.column from periodallotment where row=? order by teachercode");
          ps.setInt(1, cmbDay.getSelectedIndex()-1);
          rs=ps.executeQuery();
          while(rs.next())
          {
           r=tcodes.indexOf(rs.getString(1));
           c=rs.getInt(5);
           if(r>=0)
           {
           period="<html><font color='blue'>"+String.valueOf(subjectmap.get(rs.getInt(4)))+"</font><br /><font color='green'>"+String.valueOf(classmap.get(rs.getInt(2)))+"-"+String.valueOf(sectionmap.get(rs.getInt(3)))+"</font></html>";
           model.setValueAt(period, r, c);
           }
          }
      }
      catch(Exception e)
      {
          e.printStackTrace();
      }
    }

     public void fillEmptyTimeTable()
    {
      int row=0,column=0;
      int j=model.getColumnCount();
      System.out.println("Filling empty time table.");
      for( column=1;column<j;column++)
      {
         for ( row=0;row<model.getRowCount();row++)
         {
          model.setValueAt("", row, column); 
         }
      }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbDay;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane jTextPane1;
    private org.jdesktop.swingx.JXTable jXTable1;
    // End of variables declaration//GEN-END:variables
   PreparedStatement ps;
   ResultSet rs;
}
