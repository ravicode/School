/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BalanceTransfer.java
 *
 * Created on Jan 10, 2009, 1:58:56 AM
 */

package com.duc.FeeDepartment.LedgerSection;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static com.duc.DatabaseConnection.DatabaseConnection.*;
/**
 *
 * @author Ravi Dangaich
 */
public class BalanceTransfer extends javax.swing.JInternalFrame {
DefaultTableModel dm,dm1;
//DateFormat df;
String ledgerName=null;
    /** Creates new form BalanceTransfer */
    public BalanceTransfer() {
        initComponents();
         pack();
    
        dm = (DefaultTableModel) jTable1.getModel();
        dm.setRowCount(0);
      
       showStartButton();
        fromLedgerHeadSetup();
         //df=new SimpleDateFormat("yyyy-MM-dd");
        
        showLedgerAccount();
    }

   public void showStartButton()
   {
        //con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
         try
         {

                 ps=con.prepareStatement("select * from ledgeraccount");
                 rs=ps.executeQuery();
                 if(rs.next())
                     startButton.setVisible(false);
   }catch(Exception e)
   {
       e.printStackTrace();
   }

   }
public void fromLedgerHeadSetup()
    {
          try
    {
      ps = con.prepareStatement("select * from ledgerheadsetup");

             rs = ps.executeQuery();


            while (rs.next())
            {
        ledgerCombo.addItem(rs.getString(1));

 
            }

 // con.close();
         }
    catch(Exception e)
    {
        System.err.println("Error is"+e);
    }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jDialog1 = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        itemname = new javax.swing.JTextField();
        amountgiven = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        ledgerCombo = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jLabel4 = new javax.swing.JLabel();
        todaycollection = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        schoolexpenditure = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        surplusreceived = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        waiverused = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        charitygiven = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        netvalue = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        charityobtained = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        transportcost = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        jMenuItem1.setText("Transactions");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        jDialog1.setTitle("Other Ledger Transactions");
        jDialog1.setUndecorated(true);

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        jTextPane3.setBackground(new java.awt.Color(204, 204, 204));
        jTextPane3.setEditable(false);
        jTextPane3.setFont(new java.awt.Font("Tahoma", 0, 14));
        jTextPane3.setText("                                     Ledger Transactions");
        jScrollPane2.setViewportView(jTextPane3);

        jTextPane4.setBackground(new java.awt.Color(204, 204, 204));
        jTextPane4.setText("You can set your opening Balance and submit and withdraw amount from different ledgers");
        jScrollPane5.setViewportView(jTextPane4);

        amountgiven.setText("0");

        jLabel2.setText("Remarks");

        jLabel12.setText("Amount");

        jButton3.setText("Deposit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton6.setText("Cancel");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Withdraw");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(itemname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(amountgiven, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE))))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amountgiven, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setClosable(true);
        setIconifiable(true);
        setTitle("Ledger Account View");

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Ledger From", "Ledger Dues", "Ledger Collection", "Last Updated", "Tranfer Amount", " Fee Collection"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setComponentPopupMenu(jPopupMenu1);
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("Ledger Account Balance Management");

        jButton1.setText("Transfer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        ledgerCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "choose" }));

        jLabel3.setText("Ledger To");

        jTextPane1.setBackground(new java.awt.Color(204, 204, 204));
        jTextPane1.setEditable(false);
        jTextPane1.setFont(new java.awt.Font("Tahoma", 1, 18));
        jTextPane1.setText("                                                     Ledger Account Management");
        jScrollPane3.setViewportView(jTextPane1);

        jTextPane2.setBackground(new java.awt.Color(204, 204, 204));
        jTextPane2.setEditable(false);
        jTextPane2.setText("Net=(Total Collection+Total Surplus+Total Charity Obtained)-(Total School Expenditure+Total Charity Given+Total Waiver+Total Transport)");
        jScrollPane4.setViewportView(jTextPane2);

        jLabel4.setText("Total Collection");

        jLabel6.setText("Total Institute Expenditure");

        jLabel8.setText("Total Surplus");

        jLabel5.setText("Total waiver");

        jLabel7.setText("Total Charity given");

        jLabel9.setText("Net");

        jLabel10.setText("Total Charity Obtained");

        jLabel11.setText("Total Transport");

        jButton4.setText("Net ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        jButton5.setText("Close");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 807, Short.MAX_VALUE)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 807, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(153, 153, 153)
                        .addComponent(startButton, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 773, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(netvalue, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(288, 288, 288)
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                        .addGap(45, 45, 45)
                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(surplusreceived, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(176, 176, 176)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ledgerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(schoolexpenditure)
                                    .addComponent(charityobtained, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
                                .addGap(424, 424, 424))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(todaycollection, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))))
                .addGap(24, 24, 24))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(waiverused, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                .addGap(536, 536, 536))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(charitygiven, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(536, 536, 536))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(transportcost, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(531, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(startButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(todaycollection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(surplusreceived, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(charityobtained, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(schoolexpenditure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(ledgerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(charitygiven, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(waiverused, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(transportcost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(netvalue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        transferLedgerRow();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        updateLedgerAccountAfterTransfer();
       updateLedgerTransferRecord();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        todayCollection();
        todayWaiverCollection();
        todaySchoolExpenditure();
        totalSurplusCollected();
        totalCharityObtained();
        totalCharityGiven();
       // totalSurplusUsed();
         totalTransportFuelCost();
        netValue();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
       startLedger();
}//GEN-LAST:event_startButtonActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       //depositDirect();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       int crow=jTable1.getSelectedRow();
         ledgerName=dm.getValueAt(crow,0).toString();
         LedgerTransaction ld=new LedgerTransaction();
         //ld.depositDirect(ledgerName);
         ld.setLedgerName(ledgerName);
         add(ld,0);
         ld.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        //withdrawDirect();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
      this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed
 public void startLedger()
    {
      // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
         try
         {
           ps=con.prepareStatement("select * from ledgerheadsetup");

             rs=ps.executeQuery();
             if(rs.next())
             {
             rs.first();
             rs.previous();

             while(rs.next())
             {

                 ps=con.prepareStatement("insert into ledgeraccount (ledgercode,dues,paid,currentbalance,date) values(?,?,?,?,?)");
                 ps.setInt(1,rs.getInt(2));
                 ps.setDouble(2,0);
             ps.setDouble(3, 0);
           ps.setDouble(4, 0);
           ps.setString(5,datum);
           ps.executeUpdate();
             }
         }else JOptionPane.showConfirmDialog(null,"Set the Ledger heads First","Ledger Head Setup",JOptionPane.OK_OPTION);
         }
             catch(Exception e)
         {
            e.printStackTrace();
         }
    }



    public void updateLedgerAccountAfterTransfer()
    {
         // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
         try
         {
             for(int i=0;i<dm.getRowCount();i++)
                 {
                  String ledgertitle=dm.getValueAt(i,0).toString();

                 ps=con.prepareStatement("select * from ledgerheadsetup where ledgertitle=?");
                 ps.setString(1,ledgertitle);
             rs1=ps.executeQuery();
              System.out.println("444441111111");
             rs1.next();
              System.out.println("44444222222");
             ps=con.prepareStatement("select * from ledgeraccount where ledgercode=?");
             ps.setInt(1,rs1.getInt(2));
             rs=ps.executeQuery();

             System.out.println("44444");
             if(rs.next())
             
             {
                
                Double dues=Double.parseDouble(dm.getValueAt(i,1).toString());
                         Double currentbalance=Double.parseDouble(dm.getValueAt(i,5).toString());
                         String update=dm.getValueAt(i,3).toString();
                
                 ps=con.prepareStatement("update ledgeraccount set dues=?,paid=?,date=?,currentbalance=? where ledgercode=?");
                  
                  ps.setDouble(1,dues);
                  ps.setDouble(2,Double.parseDouble(dm.getValueAt(i,2).toString()));
                  ps.setString(3,update);
                  
                  ps.setDouble(4,currentbalance);
                  ps.setInt(5,rs.getInt(1));
                  ps.executeUpdate();
                  System.out.println("tttttttt");
             }


           
             }

         }catch(Exception e)
         {
             e.printStackTrace();
         }
    }


    public void totalTransportFuelCost()
{
    int i=0,j=0;
    Double balance=0.0;
    //con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
    try
    {
        ps=con.prepareStatement("select * from transportfuel");


        rs=ps.executeQuery();
       // System.out.println("value"+rs.next());
        while(rs.next())
            {
                j++;
             
            }
            rs.first();
            rs.previous();

           
            while(rs.next())
            {
                balance=balance+rs.getDouble(4);
            }

             ps=con.prepareStatement("select * from transportmaintenance");
             rs=ps.executeQuery();
             while(rs.next())
                 balance=balance+rs.getDouble(4);
    }       catch(Exception e)
            {
        e.printStackTrace();
            }  transportcost.setText(String.valueOf(balance));
}


     public void  totalCharityObtained()
{
    int i=0,j=0;
    Double balance=0.0;
   // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
    try
    {
        ps=con.prepareStatement("select * from charityobtained");
     

        rs=ps.executeQuery();
       // System.out.println("value"+rs.next());
        while(rs.next())
            {
                j++;
           
            }
            rs.first();
            rs.previous();
          
            while(rs.next())
            {
                balance=balance+rs.getDouble(3);
            }
    }       catch(Exception e)
            {
        e.printStackTrace();
            }  charityobtained.setText(String.valueOf(balance));
}


      public void  totalCharityGiven()
{
    int i=0,j=0;
    Double balance=0.0;
   // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
    try
    {
        ps=con.prepareStatement("select * from charitygiven");


        rs=ps.executeQuery();
       // System.out.println("value"+rs.next());
        while(rs.next())
            {
                j++;
            
            }
            rs.first();
            rs.previous();

            while(rs.next())
            {
                balance=balance+rs.getDouble(3);
            }
    }       catch(Exception e)
            {
        e.printStackTrace();
            }  charitygiven.setText(String.valueOf(balance));
}

    public void totalSurplusCollected()
{
     int i=0,j=0;
    Double balance=0.0;
   // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
    try
    {
        ps=con.prepareStatement("select * from studentsurplus");
     

        rs=ps.executeQuery();
       // System.out.println("value"+rs.next());
        while(rs.next())
            {
                j++;
            
            }
            rs.first();
            rs.previous();
        
            while(rs.next())
            {
                balance=balance+rs.getDouble(2);
            }
    }       catch(Exception e)
            {
        e.printStackTrace();
            }
     surplusreceived.setText(String.valueOf(balance));

}
 public void todayWaiverCollection()
    {
         int i=0,j=0;
    Double balance=0.0;
   // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
    try
    {
        ps=con.prepareStatement("select * from feewaiver");
         rs=ps.executeQuery();
      
        while(rs.next())
            {
                j++;
          
            }
            rs.first();
            rs.previous();
           
            while(rs.next())
            {
                balance=balance+rs.getDouble(6);
            }
    }       catch(Exception e)
            {
        e.printStackTrace();
            }
     waiverused.setText(String.valueOf(balance));

    }


    public void todaySchoolExpenditure()
    {
         int i=0,j=0;
    Double balance=0.0;
   // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
    try
    {
        ps=con.prepareStatement("select * from schoolexpenditure");
       
        rs=ps.executeQuery();
       // System.out.println("value"+rs.next());
        while(rs.next())
            {
                j++;
              
            }
            rs.first();
            rs.previous();
           
            while(rs.next())
            {
               balance=balance+(rs.getDouble(5)-rs.getDouble(6));
            }
    }       catch(Exception e)
            {
        e.printStackTrace();
            }
     schoolexpenditure.setText(String.valueOf(balance));
    }
public void todayCollection()
{
     Double totaldues=0.0;
    int rowcount=dm.getRowCount();
    for(int i=0;i<rowcount;i++)
    {
        System.out.println("rd");
        totaldues+=Double.parseDouble(dm.getValueAt(i,5).toString());

    }   todaycollection.setText(String.valueOf(totaldues));
}

public void netValue()
    {
    Double totalcollection=Double.parseDouble(todaycollection.getText());
    Double totalsurplus=Double.parseDouble(surplusreceived.getText());

     Double totalcharityobtained=Double.parseDouble(charityobtained.getText());
    Double totalschoolex=Double.parseDouble(schoolexpenditure.getText());

     Double totalcharitygiven=Double.parseDouble(charitygiven.getText());
    Double totalwaiver=Double.parseDouble(waiverused.getText());

     Double totaltransport=Double.parseDouble(transportcost.getText());
    Double netvalue1=totalcollection+totalsurplus+totalcharityobtained-(totalschoolex+totalcharitygiven+totalwaiver+totaltransport);

 netvalue.setText(netvalue1.toString());
    }
   public void updateLedgerTransferRecord()
   {
       int currentRow=jTable1.getSelectedRow();
      // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
       Double toLedgerAmount = null;
     
       try
       {
             ps=con.prepareStatement("select * from ledgerheadsetup where ledgertitle=?");
             ps.setString(1,dm.getValueAt(currentRow,0).toString());
             rs=ps.executeQuery();
             rs.next();
             int fromledgerCode=rs.getInt(2);
             
             ps=con.prepareStatement("select * from ledgerheadsetup where ledgertitle=?");
             ps.setString(1,ledgerCombo.getSelectedItem().toString());
             rs=ps.executeQuery();
             rs.next();
             int toledgerCode=rs.getInt(2);
             
              for(int i=0;i<dm.getRowCount();i++)
           {
           if((ledgerCombo.getSelectedItem().toString().trim()).equals(dm.getValueAt(i,0).toString()))
            {
                toLedgerAmount=Double.parseDouble(dm.getValueAt(i,2).toString());
            }
            }
            ps=con.prepareStatement("insert into ledgertransferrecord values(?,?,?,?,?,?)");
            ps.setInt(1, fromledgerCode);
            ps.setInt(2, toledgerCode);
            ps.setDouble(3,Double.parseDouble(dm.getValueAt(currentRow,4).toString()));
            ps.setDouble(4,Double.parseDouble(dm.getValueAt(currentRow,2).toString()));
            ps.setDouble(5,  toLedgerAmount);
            ps.setString(6,datum);
            ps.executeUpdate();
           
       }catch(Exception e)
       {
           e.printStackTrace();
       }
   }

    public void updateLedgerAccount()
    {
        int i=0;
        // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
         try
         {
             //for(int i=0;i<dm.getRowCount();i++)
             String ledgertitle=dm.getValueAt(i,0).toString();
              ps=con.prepareStatement("select * from ledgerheadsetup where ledgertitle=?");
                 ps.setString(1,ledgertitle);
             rs1=ps.executeQuery();
          //   rs1.next();
             while(rs1.next())
                 {
                
             ps=con.prepareStatement("select * from ledgeraccount where ledgercode=?");
             ps.setInt(1,rs1.getInt(2));
             rs=ps.executeQuery();
             if(rs.next())
             
             {
                
                Double dues=Double.parseDouble(dm.getValueAt(i,1).toString());
                         Double paid=Double.parseDouble(dm.getValueAt(i,5).toString())-rs.getDouble(5)+rs.getDouble(3);
                         String update=dm.getValueAt(i,3).toString();
                
                 ps=con.prepareStatement("update ledgeraccount set dues=?,paid=?,date=?,currentbalance=? where ledgercode=?");
                  
                  ps.setDouble(1,dues);
                  ps.setDouble(2,paid);
                  ps.setString(3,update);
                  
                  ps.setDouble(4,Double.parseDouble(dm.getValueAt(i,5).toString()));
                  ps.setInt(5,rs1.getInt(2));
                  ps.executeUpdate();
             }


             else
             {
                 
              
                 Double dues=Double.parseDouble(dm.getValueAt(i,1).toString());
                         Double paid=Double.parseDouble(dm.getValueAt(i,5).toString());
                         String update=dm.getValueAt(i,3).toString();
                
                 ps=con.prepareStatement("insert into ledgeraccount values(?,?,?,?,?)");
                 ps.setInt(1,rs1.getInt(2));
                 ps.setDouble(2,dues);
                  ps.setDouble(3,paid);
                  ps.setString(4,update);
                  ps.setDouble(5,Double.parseDouble(dm.getValueAt(i,5).toString()));
                  ps.executeUpdate();
               
             }
             }

         }catch(Exception e)
         {
             e.printStackTrace();
         }
      
    }
    public void transferLedgerRow()
    {
        ledgerRow=jTable1.getSelectedRow();
        System.out.println(ledgerRow);
       
        Double fromledgerpaid=Double.parseDouble(dm.getValueAt(ledgerRow,2).toString())-Double.parseDouble(dm.getValueAt(ledgerRow,4).toString());
       System.out.println(fromledgerpaid);
    
      

        for(int i=0;i<dm.getRowCount();i++)
        {
            if(!dm.getValueAt(i,0).toString().trim().isEmpty())
            {
            if((ledgerCombo.getSelectedItem().toString().trim()).equals(dm.getValueAt(i,0).toString()))
            {
                  dm.setValueAt(fromledgerpaid,ledgerRow,2);
      
        Double Toledgerpaid=Double.parseDouble(dm.getValueAt(i,2).toString())+Double.parseDouble(dm.getValueAt(ledgerRow,4).toString());


        dm.setValueAt(Toledgerpaid,i,2);
        
          String updateDate=datum;
         dm.setValueAt(updateDate, i,3);
         dm.setValueAt(updateDate,ledgerRow,3);
            }
            }
    }


    }

    public void originalLedgerCollection()
    {
        
        int i=0,j=0;
          
    //con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();

    try
    {

         ps = con.prepareStatement("select * from ledgerheadsetup");

rs1 = ps.executeQuery();
while(rs1.next())
    j++;
dm.setRowCount(j);

rs1.first();
rs1.previous();
while(rs1.next())
{

    ps=con.prepareStatement("select max(date) from feepaid where ledgercode=?");
     ps.setInt(1,rs1.getInt(2));
rs=ps.executeQuery();
rs.next();
String dat=rs.getString(1);

ps=con.prepareStatement("select max(date) from feedues where ledgercode=?");
 ps.setInt(1,rs1.getInt(2));
rs=ps.executeQuery();
rs.next();
String dat1=rs.getString(1);

ps=con.prepareStatement("select TO_DAYS(?) - TO_DAYS(?) ");
ps.setString(1, dat);
ps.setString(2, dat1);
rs=ps.executeQuery();
rs.next();
int diff=rs.getInt(1);
if(diff>0)
    dat=dat;
else
    dat=dat1;


   

      ps=con.prepareStatement("select * from feedues where ledgercode=?");
        ps.setInt(1,rs1.getInt(2));
        rs=ps.executeQuery();


        if(rs.next())
        {
           rs.first();
rs.previous();

Double totalledgerdues=0.0;

while(rs.next())
            {

totalledgerdues=totalledgerdues+rs.getDouble(3);
            }

     
        System.out.println(totalledgerdues);
        dm.setValueAt(totalledgerdues, i, 1);
       
        }
        else
            dm.setValueAt(0, i, 1);


        ps=con.prepareStatement("select * from feepaid where ledgercode=?");
        ps.setInt(1,rs1.getInt(2));
        rs=ps.executeQuery();
        if(rs.next())
        {
           rs.first();
rs.previous();

Double totalledgerpayment=0.0;
          while(rs.next())
            {
            
totalledgerpayment=totalledgerpayment+rs.getDouble(5);

            }
         System.out.println(totalledgerpayment);


dm.setValueAt(totalledgerpayment, i, 5);


        }
        else
            dm.setValueAt(0, i, 5);

     
        dm.setValueAt(dat, i, 3);
        dm.setValueAt(rs1.getString(1), i, 0);
         //updateLedgerAccount();
       i++ ;
 
}
    // updateLedgerAccount();
       
}

    catch(Exception e)
    {
e.printStackTrace();
    }

   // updateLedgerAccount();

   //showLedgerAccount();
    }
public void showLedgerAccount()
{
    int i=0,j=0;
  
  try
  {

      ps=con.prepareStatement("select * from ledgeraccount");
      rs=ps.executeQuery();
     
      while(rs.next())
          j++;
      dm.setRowCount(j);
      rs.first();
      rs.previous();
     while(rs.next())
     {
         dat=rs.getString(4);
        dat1=rs.getString(4);
        System.out.println("111111"+dat);
   ps=con.prepareStatement("select max(date) from feepaid where ledgercode=?");
     ps.setInt(1,rs.getInt(1));
rs2=ps.executeQuery();
 
if(rs2.next())
{
 dat=rs2.getString(1);
 System.out.println("In feeapid");
 if(dat1==null)
      dat=rs.getString(4);
}
ps=con.prepareStatement("select max(date) from feedues where ledgercode=?");
 ps.setInt(1,rs.getInt(1));
rs2=ps.executeQuery();
 
if(rs2.next())
{
 dat1=rs2.getString(1);
  if(dat1==null)
      dat1=rs.getString(4);
}
ps=con.prepareStatement("select TO_DAYS(?) - TO_DAYS(?) ");
ps.setString(1, dat);
ps.setString(2, dat1);
rs2=ps.executeQuery();
rs2.next();
int diff=rs2.getInt(1);
if(diff>0)
    dat=dat;
else
    dat=dat1;
System.out.println("dat"+dat);
System.out.println("dat1"+dat1);


          ps = con.prepareStatement("select * from ledgerheadsetup where ledgercode=?");
ps.setInt(1,rs.getInt(1));
rs1 = ps.executeQuery();
rs1.next();

 ps=con.prepareStatement("select * from feedues where ledgercode=?");
        ps.setInt(1,rs.getInt(1));
        rs3=ps.executeQuery();

Double totalledgerdues=0.0;
        if(rs3.next())
        {
           rs3.first();
rs3.previous();



while(rs3.next())
            {

totalledgerdues=totalledgerdues+rs3.getDouble(3);
            }


        System.out.println(totalledgerdues);
     

        }
      
System.out.println("111111111111111166677");

        ps=con.prepareStatement("select * from feepaid where ledgercode=?");
        ps.setInt(1,rs.getInt(1));
        rs3=ps.executeQuery();
      Double   totalledgerpayment=0.0;
        if(rs3.next())
        {
           rs3.first();
rs3.previous();


          while(rs3.next())
            {

totalledgerpayment=totalledgerpayment+rs3.getDouble(5);

            }
        }
        System.out.println("111111111111111166677");

        System.out.println(totalledgerpayment-rs.getDouble(5)+rs.getDouble(3));
dm.setValueAt(rs1.getString(1), i, 0);
         dm.setValueAt(totalledgerdues, i, 1);
               dm.setValueAt(totalledgerpayment-rs.getDouble(5)+rs.getDouble(3), i, 2);
               System.out.println("111111111111111166677");
             dm.setValueAt(dat, i, 3);
             dm.setValueAt(0, i, 4);
             dm.setValueAt(totalledgerpayment, i, 5);
             i++;
             System.out.println(dat);
     }

      
  
  }catch(Exception e)
  {
      e.printStackTrace();
  }
}

 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountgiven;
    private javax.swing.JTextField charitygiven;
    private javax.swing.JTextField charityobtained;
    private javax.swing.JTextField itemname;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JTextPane jTextPane4;
    private javax.swing.JComboBox ledgerCombo;
    private javax.swing.JTextField netvalue;
    private javax.swing.JTextField schoolexpenditure;
    private javax.swing.JButton startButton;
    private javax.swing.JTextField surplusreceived;
    private javax.swing.JTextField todaycollection;
    private javax.swing.JTextField transportcost;
    private javax.swing.JTextField waiverused;
    // End of variables declaration//GEN-END:variables
//Connection con;
ResultSet rs,rs1,rs2,rs3;
PreparedStatement ps;
int ledgerRow;
int k=0;
static public String dat=null,dat1=null;
}
