/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LedgerTransferRecord.java
 *
 * Created on Oct 5, 2009, 10:00:18 AM
 */

package com.duc.FeeDepartment.LedgerSection;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import static com.duc.DatabaseConnection.DatabaseConnection.*;
/**
 *
 * @author Ravi Dangaich
 */
public class LedgerTransferRecord extends javax.swing.JInternalFrame {
DefaultTableModel dm;
    /** Creates new form LedgerTransferRecord */
    public LedgerTransferRecord() {
        initComponents();
         pack();
       
        dm = (DefaultTableModel) jTable1.getModel();
        dm.setRowCount(0);


        fromLedgerHeadSetup();
         showAllRecord();
    }
public void fromLedgerHeadSetup()
    {
          try
    {
    ps = con.prepareStatement("select * from ledgerheadsetup");

             rs = ps.executeQuery();


            while (rs.next())
            {
        fromLedgerCombo.addItem(rs.getString(1));

   toLedgerCombo.addItem(rs.getString(1));
            }

 // con.close();
         }
    catch(Exception e)
    {
        System.err.println("Error is"+e);
    }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fromLedgerCombo = new javax.swing.JComboBox();
        toLedgerCombo = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Ledger Balance Tranfer Report");

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Source Ledger", "Target Ledger", "Trans. Amt.", " New Source Ledger Bal", "New Target Ledger Bal", "Transfer Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTextPane1.setBackground(new java.awt.Color(204, 204, 204));
        jTextPane1.setEditable(false);
        jTextPane1.setFont(new java.awt.Font("Tahoma", 1, 18));
        jTextPane1.setText("                                                        Ledger Transfer Record");
        jScrollPane2.setViewportView(jTextPane1);

        jTextPane2.setBackground(new java.awt.Color(204, 204, 204));
        jTextPane2.setEditable(false);
        jTextPane2.setText("See your ledger transfer records..");
        jScrollPane3.setViewportView(jTextPane2);

        jLabel1.setText("From Ledger");

        jLabel2.setText("To Ledger");

        fromLedgerCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "choose" }));
        fromLedgerCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromLedgerComboActionPerformed(evt);
            }
        });

        toLedgerCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "choose" }));
        toLedgerCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toLedgerComboActionPerformed(evt);
            }
        });

        jButton1.setText("View");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 773, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fromLedgerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(toLedgerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(340, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(fromLedgerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toLedgerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void fromLedgerComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromLedgerComboActionPerformed
       viewFromLedgerTransferRecord();
    }//GEN-LAST:event_fromLedgerComboActionPerformed

    private void toLedgerComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toLedgerComboActionPerformed
         viewToLedgerTransferRecord();
    }//GEN-LAST:event_toLedgerComboActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        viewExchangeLedger();
    }//GEN-LAST:event_jButton1ActionPerformed


    public void showAllRecord()
    {
        int i=0,j=0;
        // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
         try
         {
              ps=con.prepareStatement("select * from ledgertransferrecord");

            rs=ps.executeQuery();
            if(rs.next())
            {
               rs.first();
               rs.previous();

            while(rs.next())
                j++;
            dm.setRowCount(j);
            rs.first();
            rs.previous();
            while(rs.next())
            {

                 ps=con.prepareStatement("select * from ledgerheadsetup where ledgercode=?");
             ps.setInt(1,rs.getInt(1));
             rs1=ps.executeQuery();
             rs1.next();
String fromLedger=rs1.getString(1);

ps=con.prepareStatement("select * from ledgerheadsetup where ledgercode=?");
             ps.setInt(1,rs.getInt(2));
             rs1=ps.executeQuery();
             rs1.next();
String toLedger=rs1.getString(1);
               dm.setValueAt(fromLedger,i, 0);

               dm.setValueAt(toLedger,i, 1);
                dm.setValueAt(rs.getDouble(3),i, 2);
                 dm.setValueAt(rs.getDouble(4),i, 3);
                  dm.setValueAt(rs.getDouble(5),i, 4);
                   dm.setValueAt(rs.getString(6),i, 5);
                   i++;
            }
         }
         }catch(Exception e)
         {
             e.printStackTrace();
         }
         }

    
    public void viewExchangeLedger()
    {
        int i=0,j=0;
        int fromLedger=0,toLedger=0;
        // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
         try
         {
             ps=con.prepareStatement("select * from ledgerheadsetup where ledgertitle=?");
             ps.setString(1,fromLedgerCombo.getSelectedItem().toString());
             rs=ps.executeQuery();
             if(rs.next())
 fromLedger=rs.getInt(2);

ps=con.prepareStatement("select * from ledgerheadsetup where ledgertitle=?");
             ps.setString(1,toLedgerCombo.getSelectedItem().toString());
             rs=ps.executeQuery();
             if(rs.next())
toLedger=rs.getInt(2);

            ps=con.prepareStatement("select * from ledgertransferrecord where fromledgercode=? and toledgercode=?");
            ps.setInt(1,fromLedger);
            ps.setInt(2,toLedger);
            rs=ps.executeQuery();
          if(rs.next())
          {
              rs.first();
              rs.previous();
            while(rs.next())
                j++;
            dm.setRowCount(j);
            rs.first();
            rs.previous();
            while(rs.next())
            {
               dm.setValueAt(fromLedgerCombo.getSelectedItem().toString(),i, 0);

               dm.setValueAt(toLedgerCombo.getSelectedItem().toString(),i, 1);
                dm.setValueAt(rs.getDouble(3),i, 2);
                 dm.setValueAt(rs.getDouble(4),i, 3);
                  dm.setValueAt(rs.getDouble(5),i, 4);
                   dm.setValueAt(rs.getString(6),i, 5);
                   i++;
            }
         }
         }catch(Exception e)
         {
             e.printStackTrace();
         }
    }

    public void  viewFromLedgerTransferRecord()
    {
        int i=0,j=0;
       //  con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
         try
         {
             ps=con.prepareStatement("select * from ledgerheadsetup where ledgertitle=?");
             ps.setString(1,fromLedgerCombo.getSelectedItem().toString());
             rs=ps.executeQuery();
             rs.next();

            ps=con.prepareStatement("select * from ledgertransferrecord where fromledgercode=?");
            ps.setInt(1,rs.getInt(2));
            rs=ps.executeQuery();
            while(rs.next())
                j++;
            dm.setRowCount(j);
            rs.first();
            rs.previous();
            while(rs.next())
            {
               dm.setValueAt(fromLedgerCombo.getSelectedItem().toString(),i, 0);
                ps=con.prepareStatement("select * from ledgerheadsetup where ledgercode=?");
             ps.setInt(1,rs.getInt(2));
             rs1=ps.executeQuery();
             rs1.next();
             String toLedgerTitle=rs1.getString(1);

               dm.setValueAt(toLedgerTitle,i, 1);
                dm.setValueAt(rs.getDouble(3),i, 2);
                 dm.setValueAt(rs.getDouble(4),i, 3);
                  dm.setValueAt(rs.getDouble(5),i, 4);
                   dm.setValueAt(rs.getString(6),i, 5);
                   i++;
            }
         }catch(Exception e)
         {
             e.printStackTrace();
         }
    }

    public void  viewToLedgerTransferRecord()
    {
       int i=0,j=0;
        // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
         try
         {
             ps=con.prepareStatement("select * from ledgerheadsetup where ledgertitle=?");
             ps.setString(1,toLedgerCombo.getSelectedItem().toString());
             rs=ps.executeQuery();
             rs.next();

            ps=con.prepareStatement("select * from ledgertransferrecord where toledgercode=?");
            ps.setInt(1,rs.getInt(2));
            rs=ps.executeQuery();
            while(rs.next())
                j++;
            dm.setRowCount(j);
            rs.first();
            rs.previous();
            while(rs.next())
            {
               dm.setValueAt(toLedgerCombo.getSelectedItem().toString(),i, 1);
                ps=con.prepareStatement("select * from ledgerheadsetup where ledgercode=?");
             ps.setInt(1,rs.getInt(1));
             rs1=ps.executeQuery();
             rs1.next();
             String fromLedgerTitle=rs1.getString(1);

               dm.setValueAt(fromLedgerTitle,i, 0);
                dm.setValueAt(rs.getDouble(3),i, 2);
                 dm.setValueAt(rs.getDouble(4),i, 3);
                  dm.setValueAt(rs.getDouble(5),i, 4);
                   dm.setValueAt(rs.getString(6),i, 5);
                   i++;
            }
         }catch(Exception e)
         {
             e.printStackTrace();
         }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox fromLedgerCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JComboBox toLedgerCombo;
    // End of variables declaration//GEN-END:variables
//Connection con;
ResultSet rs,rs1;
PreparedStatement ps;
}
