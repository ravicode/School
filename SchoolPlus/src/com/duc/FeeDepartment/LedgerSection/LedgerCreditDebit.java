/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LedgerCreditDebit.java
 *
 * Created on Nov 28, 2009, 2:58:27 AM
 */

package com.duc.FeeDepartment.LedgerSection;

import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.HashMap;
import static com.duc.DatabaseConnection.DatabaseConnection.*;

/**
 *
 * @author Ravi
 */
public class LedgerCreditDebit extends javax.swing.JInternalFrame {
DefaultTableModel dm;
//DateFormat df;
HashMap ledgerindextonamemap=new HashMap();
HashMap ledgernametoindexmap=new HashMap();
    /** Creates new form LedgerCreditDebit */
    public LedgerCreditDebit() {
        initComponents();
        pack();
         dm = (DefaultTableModel) jTable1.getModel();
        dm.setRowCount(0);
       // df=new SimpleDateFormat("yyyy-MM-dd");
         dateofenquiry.setDateFormat(df);
        fromLedgerHeadSetup();
        fromIndexToLedgerMap();
        fromLedgerToIndexMap();
         showAllCreditDebit();
    }

    public void fromIndexToLedgerMap()
    {
        try
        {

            //  con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
            ps=con.prepareStatement("select ledgertitle,ledgercode from ledgerheadsetup");
            rs=ps.executeQuery();
            while(rs.next())
            {
                ledgerindextonamemap.put(rs.getInt(2),rs.getString(1));
            }
        }catch(Exception e)
        {
            e.printStackTrace();
        }
    }

     public void fromLedgerToIndexMap()
    {
        try
        {

             // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
            ps=con.prepareStatement("select ledgertitle,ledgercode from ledgerheadsetup");
            rs=ps.executeQuery();
            while(rs.next())
            {
                ledgernametoindexmap.put(rs.getString(1),rs.getInt(2));
            }
        }catch(Exception e)
        {
            e.printStackTrace();
        }
    }

public void fromLedgerHeadSetup()
    {
          try
    {

// con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();


         ps = con.prepareStatement("select * from ledgerheadsetup");

             rs = ps.executeQuery();


            while (rs.next())
            {
        ledgerCombo.addItem(rs.getString(1));

 
            }

 // con.close();
         }
    catch(Exception e)
    {
        System.err.println("Error is"+e);
    }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        printButton = new javax.swing.JButton();
        showAllButton = new javax.swing.JButton();
        ledgerCombo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        searchClassEnquiry = new javax.swing.JButton();
        dateofenquiry = new datechooser.beans.DateChooserCombo();
        jLabel6 = new javax.swing.JLabel();
        searchByDate = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        headCombo = new javax.swing.JComboBox();
        printButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Ledger Credit-Debit Report");

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "S. No.", "Ledger", "Trans. Mode", "Head", "SubHead", "Amount", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTextPane1.setBackground(new java.awt.Color(204, 204, 255));
        jTextPane1.setEditable(false);
        jTextPane1.setFont(new java.awt.Font("Tahoma", 0, 24));
        jTextPane1.setText("                                Credit-Debit Record");
        jScrollPane2.setViewportView(jTextPane1);

        jTextPane2.setBackground(new java.awt.Color(204, 204, 255));
        jTextPane2.setEditable(false);
        jTextPane2.setFont(new java.awt.Font("Tahoma", 0, 12));
        jTextPane2.setText("Manage your all School Expenditure, Transport Fuel and  Maintenance, Charity Obtained and Given ..");
        jScrollPane3.setViewportView(jTextPane2);

        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        showAllButton.setText("Show All");
        showAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllButtonActionPerformed(evt);
            }
        });

        ledgerCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "choose" }));
        ledgerCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ledgerComboActionPerformed(evt);
            }
        });
        ledgerCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ledgerComboKeyPressed(evt);
            }
        });

        jLabel2.setText("LedgerWise Search");

        searchClassEnquiry.setText("Search");
        searchClassEnquiry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchClassEnquiryActionPerformed(evt);
            }
        });

        jLabel6.setText("Date Wise Search");

        searchByDate.setText("Search");
        searchByDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByDateActionPerformed(evt);
            }
        });

        jLabel3.setText("HeadWise Search");

        headCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "choose", "School Expenditure", "Transport Fuel", "Transport Maintenance", "Charity Obtained", "Charity Given" }));
        headCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                headComboActionPerformed(evt);
            }
        });

        printButton1.setText("Close");
        printButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 899, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(headCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ledgerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchClassEnquiry, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateofenquiry, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchByDate, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 773, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(printButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 899, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(headCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(ledgerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchClassEnquiry)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(searchByDate)
                        .addComponent(dateofenquiry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(showAllButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(printButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(printButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        try {
            jTable1.print();
        }catch(Exception e) {
            e.printStackTrace();
        }
}//GEN-LAST:event_printButtonActionPerformed

        private void showAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllButtonActionPerformed
                 showAllCreditDebit();
}//GEN-LAST:event_showAllButtonActionPerformed

        private void searchClassEnquiryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchClassEnquiryActionPerformed
                 // TODO add your handling code here:
}//GEN-LAST:event_searchClassEnquiryActionPerformed

        private void searchByDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByDateActionPerformed
getByDate();
}//GEN-LAST:event_searchByDateActionPerformed

        private void headComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_headComboActionPerformed
           getByHeadName();
        }//GEN-LAST:event_headComboActionPerformed

        private void ledgerComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ledgerComboKeyPressed
            // TODO add your handling code here:
        }//GEN-LAST:event_ledgerComboKeyPressed

        private void ledgerComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ledgerComboActionPerformed
           getByLedgerTitle();
        }//GEN-LAST:event_ledgerComboActionPerformed

        private void printButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButton1ActionPerformed
          this.dispose();
        }//GEN-LAST:event_printButton1ActionPerformed

public void showAllCreditDebit()
{
   // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
    try
    {
  ps=con.prepareStatement("select * from ledgercreditdebitrecord");
        
        rs=ps.executeQuery();
        populateTable(rs);
    }catch(Exception e)
    {
        e.printStackTrace();
    }
}

public void getByDate()
{
   
     //con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
    try
    {
        ps=con.prepareStatement("select * from ledgercreditdebitrecord where date=?");
        ps.setString(1,dateofenquiry.getText());
        rs=ps.executeQuery();
        populateTable(rs);

    }catch(Exception e)
    {
        e.printStackTrace();
    }
}

public void populateTable(ResultSet rs)
{ int i=0,j=0;
    try
    {
  if(rs.next())
        {
            rs.first();
            rs.previous();
        while(rs.next())
        {
            j++;
        }
        dm.setRowCount(j);

        rs.first();
        rs.previous();
        while(rs.next())
        {
            dm.setValueAt(rs.getInt(1), i, 0);
            dm.setValueAt(ledgerindextonamemap.get(rs.getInt(2)), i, 1);
            dm.setValueAt(rs.getString(3), i, 2);
            dm.setValueAt(rs.getString(4), i, 3);
            dm.setValueAt(rs.getString(5), i, 4);
            dm.setValueAt(rs.getDouble(6), i, 5);
            dm.setValueAt(rs.getString(7), i, 6);
            i++;
        }
        }
  else
      dm.setRowCount(0);
    }catch(Exception e)
    {
        e.printStackTrace();
    }
}

public void getByLedgerTitle()
{
   
    // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
    try
    {
         ps=con.prepareStatement("select * from ledgercreditdebitrecord where ledgercode=?");
        ps.setInt(1,Integer.parseInt(ledgernametoindexmap.get(ledgerCombo.getSelectedItem()).toString()));
        rs=ps.executeQuery();
        populateTable(rs);
    }catch(Exception e)
    {
        e.printStackTrace();
    }
}
public void getByHeadName()
{
    // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
    try
    {
 ps=con.prepareStatement("select * from ledgercreditdebitrecord where head=?");
        ps.setString(1,headCombo.getSelectedItem().toString());
        rs=ps.executeQuery();
        populateTable(rs);
    }catch(Exception e)
    {
        e.printStackTrace();
    }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo dateofenquiry;
    private javax.swing.JComboBox headCombo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JComboBox ledgerCombo;
    private javax.swing.JButton printButton;
    private javax.swing.JButton printButton1;
    private javax.swing.JButton searchByDate;
    private javax.swing.JButton searchClassEnquiry;
    private javax.swing.JButton showAllButton;
    // End of variables declaration//GEN-END:variables
//Connection con;
ResultSet rs;
PreparedStatement ps;
}
