/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LedgerTransaction.java
 *
 * Created on Dec 20, 2009, 3:40:54 AM
 */

package com.duc.FeeDepartment.LedgerSection;
import static com.duc.DatabaseConnection.DatabaseConnection.*;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Ravi
 */
public class LedgerTransaction extends javax.swing.JInternalFrame {
DefaultTableModel dm,dm1;
    /** Creates new form LedgerTransaction */
    public LedgerTransaction() {
        initComponents();
         pack();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        itemname = new javax.swing.JTextField();
        amountgiven = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Direct Ledger Transaction");

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        jTextPane3.setBackground(new java.awt.Color(204, 204, 204));
        jTextPane3.setEditable(false);
        jTextPane3.setFont(new java.awt.Font("Tahoma", 0, 14));
        jTextPane3.setText("                                     Ledger Transactions");
        jScrollPane2.setViewportView(jTextPane3);

        jTextPane4.setBackground(new java.awt.Color(204, 204, 204));
        jTextPane4.setEditable(false);
        jTextPane4.setText("You can set your opening Balance and submit and withdraw amount from different ledgers");
        jScrollPane5.setViewportView(jTextPane4);

        amountgiven.setText("0");

        jLabel2.setText("Remarks");

        jLabel12.setText("Amount");

        jButton3.setText("Deposit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton6.setText("Cancel");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Withdraw");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(amountgiven, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 136, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(amountgiven, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        depositDirect();
}//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        withdrawDirect();
}//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       this.dispose(); // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
  public void withdrawDirect()
{
    int ledcode=0;

    double netbalance=0.0;
   // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
    try
    {
      ps=con.prepareStatement("Select * from ledgerheadsetup where ledgertitle=?");
         ps.setString(1,ledgerName);
         rs=ps.executeQuery();
        // System.out.println("FFFFFFFFFFFFFFFFFF");
         if(rs.next())
         ledcode=rs.getInt(2);
//ps=con.prepareStatement("select * from schoolexpenditure where serial=?");
         ps=con.prepareStatement("select * from ledgeraccount where ledgercode=?");
             ps.setInt(1,ledcode);
             rs=ps.executeQuery();
             while(rs.next())
             {
                 netbalance=rs.getDouble(3)-Double.parseDouble(amountgiven.getText());

                 ps=con.prepareStatement("update ledgeraccount set paid=? where ledgercode=?");
                 ps.setDouble(1, netbalance);
                 ps.setInt(2,ledcode);
                 ps.executeUpdate();
                 JOptionPane.showConfirmDialog(null,"Amount withdrawn","Withdrawn",JOptionPane.PLAIN_MESSAGE);
                 //showLedgerAccount();
             }
                 ps=con.prepareStatement("insert into ledgercreditdebitrecord (ledgercode,transactiontype,head,subhead,amount,date) values(?,?,?,?,?,?)");
    ps.setInt(1,ledcode);
    ps.setString(2,"Cr.");
    ps.setString(3,"Ledger Transaction");
    ps.setString(4,"*"+itemname.getText());
    ps.setDouble(5, Double.parseDouble(amountgiven.getText()));
    ps.setString(6,datum);
    ps.executeUpdate();

    }catch(Exception e)
    {
        e.printStackTrace();
    }
}


    public void depositDirect()
    {
        int ledcode=0;

    double netbalance=0.0;
   // con=new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
    try
    {
      ps=con.prepareStatement("Select * from ledgerheadsetup where ledgertitle=?");
         ps.setString(1,ledgerName);
         rs=ps.executeQuery();
        // System.out.println("FFFFFFFFFFFFFFFFFF");
         if(rs.next())
         ledcode=rs.getInt(2);
//ps=con.prepareStatement("select * from schoolexpenditure where serial=?");
         ps=con.prepareStatement("select * from ledgeraccount where ledgercode=?");
             ps.setInt(1,ledcode);
             rs=ps.executeQuery();
             while(rs.next())
             {
                 netbalance=rs.getDouble(3)+Double.parseDouble(amountgiven.getText());

                 ps=con.prepareStatement("update ledgeraccount set paid=? where ledgercode=?");
                 ps.setDouble(1, netbalance);
                 ps.setInt(2,ledcode);
                 ps.executeUpdate();
JOptionPane.showConfirmDialog(null,"Amount deposited","Deposit",JOptionPane.PLAIN_MESSAGE);
                 
//showLedgerAccount();
             }
                 ps=con.prepareStatement("insert into ledgercreditdebitrecord (ledgercode,transactiontype,head,subhead,amount,date) values(?,?,?,?,?,?)");
    ps.setInt(1,ledcode);
    ps.setString(2,"Deb.");
    ps.setString(3,"Ledger Transaction");
    ps.setString(4,"*"+itemname.getText());
    ps.setDouble(5, Double.parseDouble(amountgiven.getText()));
    ps.setString(6,datum);
    ps.executeUpdate();
    //jDialog1.setVisible(false);

    }catch(Exception e)
    {
        e.printStackTrace();
    }
    }

    public void setLedgerName(String ln)
    {
        ledgerName=ln;
    }

 /*   public void showLedgerAccount()
{
    int i=0,j=0;

  try
  {
dm.setRowCount(0);
      ps=con.prepareStatement("select * from ledgeraccount");
      rs=ps.executeQuery();

      while(rs.next())
          j++;
      dm.setRowCount(j);
      rs.first();
      rs.previous();
     while(rs.next())
     {
         dat=rs.getString(4);
        dat1=rs.getString(4);
        System.out.println("111111"+dat);
   ps=con.prepareStatement("select max(date) from feepaid where ledgercode=?");
     ps.setInt(1,rs.getInt(1));
rs2=ps.executeQuery();

if(rs2.next())
{
 dat=rs2.getString(1);
 System.out.println("In feeapid");
 if(dat1==null)
      dat=rs.getString(4);
}
ps=con.prepareStatement("select max(date) from feedues where ledgercode=?");
 ps.setInt(1,rs.getInt(1));
rs2=ps.executeQuery();

if(rs2.next())
{
 dat1=rs2.getString(1);
  if(dat1==null)
      dat1=rs.getString(4);
}
ps=con.prepareStatement("select TO_DAYS(?) - TO_DAYS(?) ");
ps.setString(1, dat);
ps.setString(2, dat1);
rs2=ps.executeQuery();
rs2.next();
int diff=rs2.getInt(1);
if(diff>0)
    dat=dat;
else
    dat=dat1;
System.out.println("dat"+dat);
System.out.println("dat1"+dat1);


          ps = con.prepareStatement("select * from ledgerheadsetup where ledgercode=?");
ps.setInt(1,rs.getInt(1));
rs1 = ps.executeQuery();
rs1.next();

 ps=con.prepareStatement("select * from feedues where ledgercode=?");
        ps.setInt(1,rs.getInt(1));
        rs3=ps.executeQuery();

Double totalledgerdues=0.0;
        if(rs3.next())
        {
           rs3.first();
rs3.previous();



while(rs3.next())
            {

totalledgerdues=totalledgerdues+rs3.getDouble(3);
            }


        System.out.println(totalledgerdues);


        }

System.out.println("111111111111111166677");

        ps=con.prepareStatement("select * from feepaid where ledgercode=?");
        ps.setInt(1,rs.getInt(1));
        rs3=ps.executeQuery();
      Double   totalledgerpayment=0.0;
        if(rs3.next())
        {
           rs3.first();
rs3.previous();


          while(rs3.next())
            {

totalledgerpayment=totalledgerpayment+rs3.getDouble(5);

            }
        }
        System.out.println("111111111111111166677");

        System.out.println(totalledgerpayment-rs.getDouble(5)+rs.getDouble(3));
dm.setValueAt(rs1.getString(1), i, 0);
         dm.setValueAt(totalledgerdues, i, 1);
               dm.setValueAt(totalledgerpayment-rs.getDouble(5)+rs.getDouble(3), i, 2);
               System.out.println("111111111111111166677");
             dm.setValueAt(dat, i, 3);
             dm.setValueAt(0, i, 4);
             dm.setValueAt(totalledgerpayment, i, 5);
             i++;
             System.out.println(dat);
     }



  }catch(Exception e)
  {
      e.printStackTrace();
  }
}
*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountgiven;
    private javax.swing.JTextField itemname;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JTextPane jTextPane4;
    // End of variables declaration//GEN-END:variables
ResultSet rs;
PreparedStatement ps;
String ledgerName=null;

//ResultSet rs,rs1,rs2,rs3;
//PreparedStatement ps;
//int ledgerRow;
//int k=0;
//static public String dat=null,dat1=null;
}
