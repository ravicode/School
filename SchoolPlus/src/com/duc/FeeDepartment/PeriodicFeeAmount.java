/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PeriodicFeeAmount.java
 *
 * Created on Nov 29, 2009, 6:19:10 PM
 */

package com.duc.FeeDepartment;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.JOptionPane;
import java.util.HashMap;
import static com.duc.DatabaseConnection.DatabaseConnection.*;
/**
 *
 * @author Ravi Dangaich
 */
public class PeriodicFeeAmount extends javax.swing.JInternalFrame {
DefaultTableModel dm;
//MapForIndex mp=new MapForIndex();

HashMap classmap=mp.getClassIndexName();
 HashMap classmap1=mp.getClassIndexFromName();
  HashMap headmap1=mp.getPeriodicFeeIndexFromName();
   HashMap headmap=mp.getPeriodicFeeIndexToName();
    /** Creates new form PeriodicFeeAmount */
    public PeriodicFeeAmount() {
        initComponents();
         pack();
        //this.setLocationRelativeTo(null);
          dm = (DefaultTableModel)jTable1.getModel();
        dm.setRowCount(0);
        fromClass();
        fromAdmissionFeeHead();

        
    }

   

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        classtitle = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Periodic Fee Deposit Window");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Fee Head ", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 255));
        jButton1.setText("Add Amount");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 0, 0));
        jButton4.setText("Delete Amount");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextPane3.setBackground(new java.awt.Color(204, 204, 255));
        jTextPane3.setEditable(false);
        jTextPane3.setFont(new java.awt.Font("Tahoma", 0, 18));
        jTextPane3.setText("                   Periodic Fee Amount Head");
        jScrollPane4.setViewportView(jTextPane3);

        jTextPane4.setBackground(new java.awt.Color(204, 204, 255));
        jTextPane4.setEditable(false);
        jTextPane4.setText("Add  periodic fee amount heads...and for deposit..choose the periodic fee from table and clas and click select");
        jScrollPane5.setViewportView(jTextPane4);

        jLabel1.setText("Amount");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Head");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "choose" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "choose" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Class");

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 0, 255));
        jButton5.setText("Select  Amount");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, 0, 92, Short.MAX_VALUE)
                        .addGap(48, 48, 48)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, 0, 92, Short.MAX_VALUE)
                        .addGap(111, 111, 111)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(classtitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap(159, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(classtitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        addFeeHeadAmount();        // TODO add your handling code here:
}//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        removeFeeHeadAmount();      // TODO add your handling code here:
}//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    if(stdid==null)selectPeriodicAmount();
    else
        selectStudentPeriodicAmount();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
       oldFeeHeadAmount();
    }//GEN-LAST:event_jComboBox2ActionPerformed
public void selectStudentPeriodicAmount()
{
     int crow=jTable1.getSelectedRow();
       int ledgercode=0,annualstatus=0;
        int feehead=Integer.parseInt(headmap1.get(dm.getValueAt(crow,0)).toString());
        Double feeamount=Double.parseDouble(dm.getValueAt(crow,1).toString());
        // con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
       try
       {
           ps = con.prepareStatement("select * from periodicfeeamounthead where head=? and class=?");
ps.setInt(1,feehead);
ps.setInt(2,Integer.parseInt(classmap1.get(jComboBox2.getSelectedItem().toString()).toString()));
           rs = ps.executeQuery();
           while(rs.next())
                ledgercode=rs.getInt(4);

          ps = con.prepareStatement("select * from periodicfeehead where feeid=?");
ps.setInt(1,feehead);
//ps.setString(2,jComboBox2.getSelectedItem().toString());

         rs = ps.executeQuery();
         while(rs.next())
             annualstatus=rs.getInt(3);

       }catch(Exception e)
       {
           e.printStackTrace();
       }


       // System.out.println(id);
      com.duc.FeeDepartment.FeeCounter1 r1=   new com.duc.FeeDepartment.FeeCounter1();
      //r1.setVisible(true);
        // r1.getPeriodicFeeStructure(feehead,feeamount,ledgercode);
      if(annualstatus==0)
      {
         r1.insertParticularStudentCustomizedPeriodicStructure(stdid,month,feehead,feeamount,ledgercode);
      r1.insertParticularStudentPeriodicStructure(stdid,month,feehead,feeamount,ledgercode);
      JOptionPane.showConfirmDialog(null,"Loaded for Student on month Selection basis","Periodic Fee",JOptionPane.OK_CANCEL_OPTION);
      }else
      {
r1.insertParticularStudentCustomizedAnnualPeriodicStructure(stdid,month,feehead,feeamount,ledgercode);
          r1.insertParticularStudentAnnualStructure(stdid,month,feehead,feeamount,ledgercode);
         JOptionPane.showConfirmDialog(null,"Loaded for Student on Annual basis","Yearly Fee",JOptionPane.OK_CANCEL_OPTION);

      }System.out.println("sdsdsd"+feehead);
}
    public void selectPeriodicAmount()
    {
        int crow=jTable1.getSelectedRow();
       int ledgercode=0,annualstatus=0;
        int feehead=Integer.parseInt(headmap1.get(dm.getValueAt(crow,0)).toString());
        Double feeamount=Double.parseDouble(dm.getValueAt(crow,1).toString());
        // con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
       try
       {
           ps = con.prepareStatement("select * from periodicfeeamounthead where head=? and class=?");
ps.setInt(1,feehead);
ps.setInt(2,Integer.parseInt(classmap1.get(jComboBox2.getSelectedItem().toString()).toString()));
           rs = ps.executeQuery();
           while(rs.next())
                ledgercode=rs.getInt(4);

          ps = con.prepareStatement("select * from periodicfeehead where feeid=?");
ps.setInt(1,feehead);
//ps.setString(2,jComboBox2.getSelectedItem().toString());

         rs = ps.executeQuery();
         while(rs.next())
             annualstatus=rs.getInt(3);

       }catch(Exception e)
       {
           e.printStackTrace();
       }


       // System.out.println(id);
      com.duc.FeeDepartment.FeeCounter1 r1=   new com.duc.FeeDepartment.FeeCounter1();
      //r1.setVisible(true);
        // r1.getPeriodicFeeStructure(feehead,feeamount,ledgercode);
      if(annualstatus==0)
      {
          r1.loadAllPeriodicCustomizedStudentOfClass(stdclass,month,feehead,feeamount,ledgercode);
      r1.insertPeriodicStudentStructure(stdclass,month,feehead,feeamount,ledgercode);
      JOptionPane.showConfirmDialog(null,"Loaded for Class on month Selection basis","Periodic Fee",JOptionPane.OK_CANCEL_OPTION);
      }else
      {
          r1.loadAllAnnualPeriodicCustomizedStudentOfClass(stdclass,month,feehead,feeamount,ledgercode);
          r1.insertPeriodicAnnualDues(stdclass,month,feehead,feeamount,ledgercode);
      JOptionPane.showConfirmDialog(null,"Loaded for Class on Annual basis","Annual Fee",JOptionPane.OK_CANCEL_OPTION);
      }
       System.out.println("sdsdsd"+feehead);
       System.out.println("11111111111"+stdid);
    }

  
public void fromClass()
{
    //con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
    try
    {
        // con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();


         ps = con.prepareStatement("select * from classsetup");

             rs = ps.executeQuery();


            while (rs.next())
            {
        jComboBox2.addItem(rs.getString(1));


            }



    }catch(Exception e)
    {
        e.printStackTrace();
    }

}
public void fromAdmissionFeeHead()
{
   // con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
    try
    {
        // con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();


         ps = con.prepareStatement("select * from periodicfeehead where status=1");

             rs = ps.executeQuery();


            while (rs.next())
            {
        jComboBox1.addItem(rs.getString(2));


            }



    }catch(Exception e)
    {
        e.printStackTrace();
    }

}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">



public void addFeeHeadAmount()
{
    // con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
    int id=0;
try
{
    // ps = con.prepareStatement("insert into inventorysetup (Inventoryunit,InventoryVendor,Inventorymode,class,unitid,Time) values(?,?,?,?,?,?)");
//ps=con.prepareStatement("select * from periodicfeehead where head=? and class=?");
//ps.setString(1,jComboBox1.getSelectedItem().toString());

    //ps.setString(2,jComboBox2.getSelectedItem().toString());
    //rs=ps.executeQuery();
    ps=con.prepareStatement("insert into periodicfeeamounthead(head,amount,class) values(?,?,?)");
  // ps.setInt(1,id);
    ps.setString(1,headmap1.get(jComboBox1.getSelectedItem().toString()).toString());
    ps.setDouble(2,Double.parseDouble(classtitle.getText()));
    ps.setInt(3,Integer.parseInt(classmap1.get(jComboBox2.getSelectedItem().toString()).toString()));


         ps.executeUpdate();


        System.out.println("Done");
        //JOptionPane.showMessageDialog(null,"data stored successfully","report",JOptionPane.PLAIN_MESSAGE);

//con.close();
         System.out.println("DataBase Connection Closed");
         oldFeeHeadAmount();
              return;
        }


catch(Exception e)
{
    e.printStackTrace();
    System.out.println("here");
}
    }

    public void oldFeeHeadAmount()
    {
         if(stdclass!=null)
    jComboBox2.setSelectedItem(stdclass);
       //  con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
       try
       {
           ps = con.prepareStatement("select * from periodicfeeamounthead left join periodicfeehead on feeid=`periodicfeeamounthead`.head where class=? and status=1");;
ps.setInt(1,Integer.parseInt(classmap1.get(jComboBox2.getSelectedItem().toString()).toString()));
           rs = ps.executeQuery();
            int i = 0,j=0;
          while(rs.next())
            {
                j++;
            }
            rs.first();
            rs.previous();
            dm.setRowCount(j);
            while(rs.next())
            {
                dm.setValueAt(headmap.get(rs.getInt(1)), i, 0);
               dm.setValueAt(rs.getDouble(2), i, 1);

                i++;
            }
           // con.close();
            System.out.println("Database closed");

       }
       catch(Exception e)
       {
           System.err.println("Error"+e);
       }
    }



public void oldFeeHeadAmountShowFromFeeCounter(String stdclass)
    {
   // if(stdclass!=null)
    //jComboBox2.setSelectedItem(stdclass);
    //con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
       try
       {
           ps = con.prepareStatement("select * from periodicfeeamounthead where class=?");
ps.setString(1,stdclass);
           rs = ps.executeQuery();
            int i = 0,j=0;
          while(rs.next())
            {
                j++;
            }
            rs.first();
            rs.previous();
            dm.setRowCount(j);
            while(rs.next())
            {
                dm.setValueAt(headmap.get(rs.getInt(1)), i, 0);
               dm.setValueAt(rs.getDouble(2), i, 1);

                i++;
            }
           // con.close();
            System.out.println("Database closed");

       }
       catch(Exception e)
       {
           System.err.println("Error"+e);
       }
    }






    public void removeFeeHeadAmount()
    {
       // con= new com.duc.DatabaseConnection.DatabaseConnection().dataConnection();
        int row = jTable1.getSelectedRow();
         System.out.println("row no. selected"+row);
        try
        {
         ps=con.prepareStatement("delete from periodicfeeamounthead where head=? and class=?");

         ps.setInt(1,Integer.parseInt(headmap1.get(dm.getValueAt(row, 0)).toString()));
         ps.setInt(2,Integer.parseInt(classmap1.get(jComboBox2.getSelectedItem().toString()).toString()));
         ps.executeUpdate();
         dm.removeRow(row);
         // con.close();
         System.out.println("DataBase Conection Closed");
    }
        catch(Exception e)
        {
            System.err.println("Error"+e);
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField classtitle;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JTextPane jTextPane4;
    // End of variables declaration//GEN-END:variables
//Connection con;
ResultSet rs;
PreparedStatement ps;
public String stdclass=null,month=null,stdid=null;
}
